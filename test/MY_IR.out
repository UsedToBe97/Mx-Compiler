sat__ [GV]
assignment__ [GV]
cond_ass__ [GV]
k__ [GV]
n__ [GV]
m__ [GV]
last__ [GV]
myHash__ [GV]

string[ 0 ] - 
string[ 1 ] *x
string[ 2 ] xz 
string[ 3 ]  <= 0;

string[ 4 ] x
string[ 5 ]  + 
string[ 6 ]  = 1;

string[ 7 ] max: xz;


check [Func]:
	r16 = 0
Label_4:
	r18 = r16 < qword [ m__ ]
	jump Label_3 if r18 je 1
	jump Label_2
Label_3:
	r19 = 0
	r17 = 0
Label_8:
	r20 = r17 < 3
	jump Label_7 if r20 je 1
	jump Label_6
Label_7:
	r21 = qword [ sat__ ]
	r22 = qword [r21 + r16 * 8]
	r23 = qword [r22 + r17 * 8]
	r25 = r23 > 0
	jump Label_12 if r25 je 1
	r24 = 0
	jump Label_13
Label_12:
	r27 = qword [ assignment__ ]
	r26 = qword [r27 + r23 * 8] == 1
	r24 = r26
Label_13:
	jump Label_10 if r24 je 1
	jump Label_11
Label_10:
	r19 = 1
	jump Label_9
Label_11:
Label_9:
	r29 = r23 < 0
	jump Label_17 if r29 je 1
	r28 = 0
	jump Label_18
Label_17:
	r31 = qword [ assignment__ ]
	r32 = r23
	- r32
	r30 = qword [r31 + r32 * 8] == 0
	r28 = r30
Label_18:
	jump Label_15 if r28 je 1
	jump Label_16
Label_15:
	r19 = 1
	jump Label_14
Label_16:
Label_14:
Label_5:
	r17 = r17 + 1
	jump Label_8
Label_6:
	r33 = r19 == 0
	jump Label_20 if r33 je 1
	jump Label_21
Label_20:
	rax = 0
	jump Label_0
	jump Label_19
Label_21:
Label_19:
Label_1:
	r16 = r16 + 1
	jump Label_4
Label_2:
	rax = 1
	jump Label_0
Label_0:
myprint [Func]:
	r16 = rdi
	r17 = 0
Label_26:
		rdi = r16
		FuncCall string.length Param_size : 1
		r19 = rax
	r18 = r17 < r19
	jump Label_25 if r18 je 1
	jump Label_24
Label_25:
		rdi = r16
		rsi = r17
		FuncCall string.ord Param_size : 2
		r21 = rax
	r20 = qword [ myHash__ ] + r21
	qword [ myHash__ ] = r20
Label_23:
	r17 = r17 + 1
	jump Label_26
Label_24:
Label_22:
payoff [Func]:
	r16 = rdi
	r17 = rsi
	r18 = 0
	r19 = 0
Label_31:
	r20 = r19 < 3
	jump Label_30 if r20 je 1
	jump Label_29
Label_30:
	r21 = qword [r16 + r19 * 8] != qword [r17 + r19 * 8]
	jump Label_33 if r21 je 1
	jump Label_34
Label_33:
	r22 = r18
	r18 = r18 + 1
	jump Label_32
Label_34:
Label_32:
Label_28:
	r19 = r19 + 1
	jump Label_31
Label_29:
	rax = r18
	jump Label_27
Label_27:
print_cond [Func]:
	r16 = rdi
	r17 = r16 == qword [ n__ ]
	jump Label_37 if r17 je 1
	jump Label_38
Label_37:
		rdi = qword [ cond_ass__ ]
		rsi = qword [ assignment__ ]
		FuncCall payoff Param_size : 2
		r22 = rax
		rdi = r22
		FuncCall toString Param_size : 1
		r23 = rax
		rdi = str__0
		rsi = r23
		FuncCall string.add Param_size : 2
		r21 = rax
		rdi = r21
		rsi = str__1
		FuncCall string.add Param_size : 2
		r19 = rax
		rdi = r19
		FuncCall myprint Param_size : 1
		r24 = rax
	r25 = 0
Label_42:
	r26 = r25 < qword [ n__ ]
	jump Label_41 if r26 je 1
	jump Label_40
Label_41:
	r28 = r25 % 10
	r27 = r28 == 0
	jump Label_44 if r27 je 1
	jump Label_45
Label_44:
	r29 = qword [ cond_ass__ ]
	r30 = r25 + 1
		rdi = qword [r29 + r30 * 8]
		FuncCall toString Param_size : 1
		r31 = rax
		rdi = r31
		FuncCall myprint Param_size : 1
		r32 = rax
	jump Label_43
Label_45:
Label_43:
Label_39:
	r25 = r25 + 1
	jump Label_42
Label_40:
	jump Label_35
	jump Label_36
Label_38:
Label_36:
	r33 = qword [ cond_ass__ ]
	r34 = r16 + 1
	qword [r33 + r34 * 8] = 1
	r35 = r16 + 1
		rdi = r35
		FuncCall print_cond Param_size : 1
		r36 = rax
	r37 = qword [ cond_ass__ ]
	r38 = r16 + 1
	qword [r37 + r38 * 8] = 0
	r39 = r16 + 1
		rdi = r39
		FuncCall print_cond Param_size : 1
		r40 = rax
Label_35:
dfs [Func]:
	r16 = rdi
	r17 = r16 == qword [ n__ ]
	jump Label_48 if r17 je 1
	jump Label_49
Label_48:
		FuncCall check Param_size : 0
		r19 = rax
	r18 = r19 == 1
	jump Label_51 if r18 je 1
	jump Label_52
Label_51:
		rdi = str__2
		FuncCall myprint Param_size : 1
		r20 = rax
		rdi = 0
		FuncCall print_cond Param_size : 1
		r21 = rax
		rdi = str__3
		FuncCall myprint Param_size : 1
		r22 = rax
	jump Label_50
Label_52:
Label_50:
	jump Label_46
	jump Label_47
Label_49:
Label_47:
	r23 = qword [ assignment__ ]
	r24 = r16 + 1
	qword [r23 + r24 * 8] = 1
	r25 = r16 + 1
		rdi = r25
		FuncCall dfs Param_size : 1
		r26 = rax
	r27 = qword [ assignment__ ]
	r28 = r16 + 1
	qword [r27 + r28 * 8] = 0
	r29 = r16 + 1
		rdi = r29
		FuncCall dfs Param_size : 1
		r30 = rax
Label_46:
print_last_cond [Func]:
	r16 = rdi
	r17 = r16 == qword [ n__ ]
	jump Label_55 if r17 je 1
	jump Label_56
Label_55:
		rdi = str__4
		FuncCall myprint Param_size : 1
		r18 = rax
	r19 = 1
	r20 = 0
Label_60:
	r21 = r20 < qword [ n__ ]
	jump Label_59 if r21 je 1
	jump Label_58
Label_59:
	r23 = qword [ assignment__ ]
	r24 = r20 + 1
	r22 = qword [r23 + r24 * 8] == 1
	jump Label_62 if r22 je 1
	jump Label_63
Label_62:
	r19 = 0
	jump Label_61
Label_63:
Label_61:
	r25 = qword [ assignment__ ]
	r26 = r20 + 1
		rdi = qword [r25 + r26 * 8]
		FuncCall toString Param_size : 1
		r27 = rax
		rdi = r27
		FuncCall myprint Param_size : 1
		r28 = rax
Label_57:
	r20 = r20 + 1
	jump Label_60
Label_58:
	r29 = r19 == 0
	jump Label_65 if r29 je 1
	jump Label_66
Label_65:
		rdi = str__5
		FuncCall myprint Param_size : 1
		r30 = rax
	jump Label_64
Label_66:
		rdi = str__6
		FuncCall myprint Param_size : 1
		r31 = rax
Label_64:
	jump Label_53
	jump Label_54
Label_56:
Label_54:
	r32 = qword [ assignment__ ]
	r33 = r16 + 1
	qword [r32 + r33 * 8] = 1
	r34 = r16 + 1
		rdi = r34
		FuncCall print_last_cond Param_size : 1
		r35 = rax
	r36 = qword [ assignment__ ]
	r37 = r16 + 1
	qword [r36 + r37 * 8] = 0
	r38 = r16 + 1
		rdi = r38
		FuncCall print_last_cond Param_size : 1
		r39 = rax
Label_53:
main [Func]:
	qword [ myHash__ ] = 0
	qword [ k__ ] = 5
	r17 = 2 * qword [ k__ ]
	r16 = r17 + 1
	qword [ n__ ] = r16
	qword [ m__ ] = qword [ k__ ]
	qword [ last__ ] = 1
		rdi = str__7
		FuncCall myprint Param_size : 1
		r18 = rax
	r19 = qword [ m__ ]
	r19 = r19 + 1
	r19 = r19 * 8
		rdi = r19
		FuncCall malloc Param_size : 1
		r20 = rax
	qword [r20] = qword [ m__ ]
	r20 = r20 + 8
	qword [ sat__ ] = r20
	r21 = 0
Label_71:
	r22 = r21 < qword [ m__ ]
	jump Label_70 if r22 je 1
	jump Label_69
Label_70:
	r23 = 3
	r23 = r23 + 1
	r23 = r23 * 8
		rdi = r23
		FuncCall malloc Param_size : 1
		r24 = rax
	qword [r24] = 3
	r24 = r24 + 8
	r25 = r24
	r26 = 0
	qword [r25 + r26 * 8] = qword [ last__ ]
	r27 = 1
	r28 = qword [ last__ ] + 1
	qword [r25 + r27 * 8] = r28
	r29 = 2
	r30 = qword [ last__ ] + 2
	r31 = r30
	- r31
	qword [r25 + r29 * 8] = r31
	r32 = qword [ last__ ] + 2
	qword [ last__ ] = r32
	r33 = qword [ sat__ ]
	qword [r33 + r21 * 8] = r25
Label_68:
	r21 = r21 + 1
	jump Label_71
Label_69:
	r34 = qword [ n__ ] + 1
	r35 = r34
	r35 = r35 + 1
	r35 = r35 * 8
		rdi = r35
		FuncCall malloc Param_size : 1
		r36 = rax
	qword [r36] = r34
	r36 = r36 + 8
	qword [ assignment__ ] = r36
	r37 = qword [ n__ ] + 1
	r38 = r37
	r38 = r38 + 1
	r38 = r38 * 8
		rdi = r38
		FuncCall malloc Param_size : 1
		r39 = rax
	qword [r39] = r37
	r39 = r39 + 8
	qword [ cond_ass__ ] = r39
		rdi = 0
		FuncCall dfs Param_size : 1
		r40 = rax
		rdi = 0
		FuncCall print_last_cond Param_size : 1
		r41 = rax
		rdi = qword [ myHash__ ]
		FuncCall toString Param_size : 1
		r42 = rax
		rdi = r42
		FuncCall println Param_size : 1
		r43 = rax
	rax = 0
	jump Label_67
Label_67:
