a__ [GV]
str__ [GV]

string[ 0 ] str1
string[ 1 ] str2
string[ 2 ] str3
string[ 3 ] str4
string[ 4 ] str5
string[ 5 ] str6
string[ 6 ] str7
string[ 7 ] str8
string[ 8 ] str9
string[ 9 ] str10

main [Func]:
	r16 = 30
	r16 = r16 + 1
	r16 = r16 * 8
		rdi = r16
		FuncCall malloc Param_size : 1
		r17 = rax
	qword [r17] = 30
	r17 = r17 + 8
	r16 = 30
Label_1:
	r16 = r16 - 1
	r18 = 30
	r18 = r18 + 1
	r18 = r18 * 8
		rdi = r18
		FuncCall malloc Param_size : 1
		r19 = rax
	qword [r19] = 30
	r19 = r19 + 8
	qword [r17 + r16 * 8] = r19
	jump Label_1 if r16 jne 0
	qword [ a__ ] = r17
	r20 = 30
	r20 = r20 + 1
	r20 = r20 * 8
		rdi = r20
		FuncCall malloc Param_size : 1
		r21 = rax
	qword [r21] = 30
	r21 = r21 + 8
	qword [ str__ ] = r21
	r22 = 0
Label_5:
	r24 = r22 <= 29
	jump Label_4 if r24 je 1
	jump Label_3
Label_4:
	r25 = 0
	r26 = qword [ str__ ]
	r27 = qword [ a__ ]
	r28 = qword [r27 + r22 * 8]
	r29 = 0
		rdi = qword [r28 + r29 * 8]
		FuncCall toString Param_size : 1
		r30 = rax
	qword [r26 + r22 * 8] = r30
	r23 = 0
Label_9:
	r31 = r23 < r22
	jump Label_8 if r31 je 1
	jump Label_7
Label_8:
	r33 = r23 & 1
	r32 = r33 == 0
	jump Label_11 if r32 je 1
	jump Label_12
Label_11:
	r35 = qword [ a__ ]
	r36 = qword [r35 + r22 * 8]
	r37 = 0
	r34 = r25 + qword [r36 + r37 * 8]
	r25 = r34
	jump Label_10
Label_12:
Label_10:
	r39 = r23 & 1
	r38 = r39 == 1
	jump Label_14 if r38 je 1
	jump Label_15
Label_14:
	r41 = qword [ a__ ]
	r42 = qword [r41 + r22 * 8]
	r43 = 29
	r40 = r25 + qword [r42 + r43 * 8]
	r25 = r40
	jump Label_13
Label_15:
Label_13:
Label_6:
	r44 = r23
	r23 = r23 + 1
	jump Label_9
Label_7:
		rdi = str__0
		rsi = str__1
		FuncCall string.add Param_size : 2
		r62 = rax
		rdi = r62
		rsi = str__2
		FuncCall string.add Param_size : 2
		r60 = rax
		rdi = r60
		rsi = str__3
		FuncCall string.add Param_size : 2
		r58 = rax
		rdi = r58
		rsi = str__4
		FuncCall string.add Param_size : 2
		r56 = rax
		rdi = r56
		rsi = str__5
		FuncCall string.add Param_size : 2
		r54 = rax
		rdi = r54
		rsi = str__6
		FuncCall string.add Param_size : 2
		r52 = rax
		rdi = r52
		rsi = str__7
		FuncCall string.add Param_size : 2
		r50 = rax
		rdi = r50
		rsi = str__8
		FuncCall string.add Param_size : 2
		r48 = rax
		rdi = r48
		rsi = str__9
		FuncCall string.add Param_size : 2
		r46 = rax
		rdi = r46
		FuncCall println Param_size : 1
		r63 = rax
Label_2:
	r64 = r22
	r22 = r22 + 1
	jump Label_5
Label_3:
	rax = 0
	jump Label_0
Label_0:
