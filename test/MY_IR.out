asciiTable__ [GV]

string[ 0 ] 
string[ 1 ] 
string[ 2 ]  !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
string[ 3 ]  
string[ 4 ]  
string[ 5 ]  
string[ 6 ]  
string[ 7 ]  
string[ 8 ]  
string[ 9 ]  
string[ 10 ] 

hilo [Func]:
	r16 = rdi
	r17 = rsi
	r19 = r16 << 16
	r18 = r17 | r19
	rax = r18
	jump Label_0
Label_0:
shift_l [Func]:
	r16 = rdi
	r17 = rsi
	r19 = r16 << r17
		rdi = 65535
		rsi = 65535
		FuncCall hilo Param_size : 2
		r20 = rax
	r18 = r19 & r20
	rax = r18
	jump Label_1
Label_1:
shift_r [Func]:
	r16 = rdi
	r17 = rsi
		rdi = 32767
		rsi = 65535
		FuncCall hilo Param_size : 2
		r18 = rax
	r19 = r18
	r22 = r19 >> r17
	r21 = r22 << 1
	r20 = r21 + 1
	r19 = r20
	r24 = r16 >> r17
	r23 = r19 & r24
	r19 = r23
		rdi = 65535
		rsi = 65535
		FuncCall hilo Param_size : 2
		r26 = rax
	r25 = r19 & r26
	rax = r25
	jump Label_2
Label_2:
xorshift [Func]:
	r16 = rdi
	r17 = rsi
	r18 = r16 + 1
	r19 = r18
	r20 = 0
Label_7:
	r22 = r17 * 10
	r21 = r20 < r22
	jump Label_6 if r21 je 1
	jump Label_5
Label_6:
		rdi = r19
		rsi = 13
		FuncCall shift_l Param_size : 2
		r24 = rax
	r23 = r19 ^ r24
	r19 = r23
		rdi = r19
		rsi = 17
		FuncCall shift_r Param_size : 2
		r26 = rax
	r25 = r19 ^ r26
	r19 = r25
		rdi = r19
		rsi = 5
		FuncCall shift_l Param_size : 2
		r28 = rax
	r27 = r19 ^ r28
	r19 = r27
Label_4:
	r29 = r20
	r20 = r20 + 1
	jump Label_7
Label_5:
	r30 = r19 ^ 123456789
	rax = r30
	jump Label_3
Label_3:
int2chr [Func]:
	r16 = rdi
		rdi = r16
		FuncCall toString Param_size : 1
		r17 = rax
		rdi = r17
		FuncCall println Param_size : 1
		r18 = rax
	r20 = r16 >= 32
	jump Label_12 if r20 je 1
	r19 = 0
	jump Label_13
Label_12:
	r21 = r16 <= 126
	r19 = r21
Label_13:
	jump Label_10 if r19 je 1
	jump Label_11
Label_10:
	r22 = r16 - 32
	r23 = r16 - 32
		rdi = qword [ asciiTable__ ]
		rsi = r22
		rdx = r23
		FuncCall string.substring Param_size : 3
		r24 = rax
	rax = r24
	jump Label_8
	jump Label_9
Label_11:
Label_9:
	rax = str__0
	jump Label_8
Label_8:
toStringHex [Func]:
	r16 = rdi
	r17 = str__1
	r18 = 28
Label_18:
	r19 = r18 >= 0
	jump Label_17 if r19 je 1
	jump Label_16
Label_17:
	r21 = r16 >> r18
	r20 = r21 & 15
	r22 = r20
	r23 = r22 < 10
	jump Label_20 if r23 je 1
	jump Label_21
Label_20:
	r26 = 48 + r22
		rdi = r26
		FuncCall int2chr Param_size : 1
		r27 = rax
		rdi = r17
		rsi = r27
		FuncCall string.add Param_size : 2
		r25 = rax
	r17 = r25
	jump Label_19
Label_21:
	r31 = 65 + r22
	r30 = r31 - 10
		rdi = r30
		FuncCall int2chr Param_size : 1
		r32 = rax
		rdi = r17
		rsi = r32
		FuncCall string.add Param_size : 2
		r29 = rax
	r17 = r29
Label_19:
Label_15:
	r33 = r18 - 4
	r18 = r33
	jump Label_18
Label_16:
	rax = r17
	jump Label_14
Label_14:
getnumber [Func]:
	r16 = rdi
	r17 = rsi
	r18 = rdx
	r19 = r18 & 31
	r20 = r19
		rdi = r16
		rsi = r17
		FuncCall xorshift Param_size : 2
		r21 = rax
	r22 = r21
		rdi = r22
		rsi = r20
		FuncCall shift_l Param_size : 2
		r24 = rax
	r25 = 32 - r20
		rdi = r22
		rsi = r25
		FuncCall shift_r Param_size : 2
		r26 = rax
	r23 = r24 | r26
	rax = r23
	jump Label_22
Label_22:
main [Func]:
	qword [ asciiTable__ ] = str__2
		FuncCall getInt Param_size : 0
		r25 = rax
	r16 = r25
		FuncCall getInt Param_size : 0
		r26 = rax
	r17 = r26
		FuncCall getInt Param_size : 0
		r27 = rax
	r18 = r27
		FuncCall getInt Param_size : 0
		r28 = rax
	r19 = r28
		FuncCall getInt Param_size : 0
		r29 = rax
	r20 = r29
		FuncCall getInt Param_size : 0
		r30 = rax
	r21 = r30
	r31 = 30
	r32 = 0
	r33 = 0
	r34 = 0
	r35 = 0
	r36 = 0
	r22 = r16
Label_27:
	r37 = r22 < r17
	jump Label_26 if r37 je 1
	jump Label_25
Label_26:
	r23 = r18
Label_31:
	r38 = r23 < r19
	jump Label_30 if r38 je 1
	jump Label_29
Label_30:
	r24 = r20
Label_35:
	r39 = r24 < r21
	jump Label_34 if r39 je 1
	jump Label_33
Label_34:
		rdi = r16
		rsi = r31
		rdx = r24
		FuncCall getnumber Param_size : 3
		r40 = rax
	r41 = r40
		rdi = r22
		rsi = r31
		rdx = r24
		FuncCall getnumber Param_size : 3
		r42 = rax
	r43 = r42
		rdi = r23
		rsi = r31
		rdx = r24
		FuncCall getnumber Param_size : 3
		r44 = rax
	r45 = r44
	r46 = r22 ^ r23
		rdi = r46
		rsi = r31
		rdx = r24
		FuncCall getnumber Param_size : 3
		r47 = rax
	r48 = r47
		rdi = r24
		rsi = 1
		FuncCall xorshift Param_size : 2
		r51 = rax
		rdi = r23
		rsi = 1
		FuncCall xorshift Param_size : 2
		r52 = rax
	r50 = r51 ^ r52
		rdi = r22
		rsi = 1
		FuncCall xorshift Param_size : 2
		r53 = rax
	r49 = r50 ^ r53
	r54 = r49
	r56 = r41 ^ r54
		rdi = r56
		rsi = 1
		FuncCall xorshift Param_size : 2
		r57 = rax
	r55 = r32 + r57
	r32 = r55
	r59 = r43 ^ r54
		rdi = r59
		rsi = 1
		FuncCall xorshift Param_size : 2
		r60 = rax
	r58 = r33 + r60
	r33 = r58
	r62 = r45 ^ r54
		rdi = r62
		rsi = 1
		FuncCall xorshift Param_size : 2
		r63 = rax
	r61 = r34 + r63
	r34 = r61
	r65 = r48 ^ r54
		rdi = r65
		rsi = 1
		FuncCall xorshift Param_size : 2
		r66 = rax
	r64 = r35 + r66
	r35 = r64
Label_32:
	r67 = r24
	r24 = r24 + 1
	jump Label_35
Label_33:
Label_28:
	r68 = r23
	r23 = r23 + 1
	jump Label_31
Label_29:
Label_24:
	r69 = r22
	r22 = r22 + 1
	jump Label_27
Label_25:
		rdi = r32
		FuncCall toString Param_size : 1
		r82 = rax
		rdi = r82
		rsi = str__3
		FuncCall string.add Param_size : 2
		r81 = rax
		rdi = r33
		FuncCall toString Param_size : 1
		r83 = rax
		rdi = r81
		rsi = r83
		FuncCall string.add Param_size : 2
		r79 = rax
		rdi = r79
		rsi = str__4
		FuncCall string.add Param_size : 2
		r77 = rax
		rdi = r34
		FuncCall toString Param_size : 1
		r84 = rax
		rdi = r77
		rsi = r84
		FuncCall string.add Param_size : 2
		r75 = rax
		rdi = r75
		rsi = str__5
		FuncCall string.add Param_size : 2
		r73 = rax
		rdi = r35
		FuncCall toString Param_size : 1
		r85 = rax
		rdi = r73
		rsi = r85
		FuncCall string.add Param_size : 2
		r71 = rax
		rdi = r71
		FuncCall println Param_size : 1
		r86 = rax
		rdi = r32
		FuncCall toStringHex Param_size : 1
		r89 = rax
		rdi = r89
		rsi = str__6
		FuncCall string.add Param_size : 2
		r88 = rax
		rdi = r88
		FuncCall print Param_size : 1
		r90 = rax
		rdi = r33
		FuncCall toStringHex Param_size : 1
		r93 = rax
		rdi = r93
		rsi = str__7
		FuncCall string.add Param_size : 2
		r92 = rax
		rdi = r92
		FuncCall print Param_size : 1
		r94 = rax
		rdi = r34
		FuncCall toStringHex Param_size : 1
		r97 = rax
		rdi = r97
		rsi = str__8
		FuncCall string.add Param_size : 2
		r96 = rax
		rdi = r96
		FuncCall print Param_size : 1
		r98 = rax
		rdi = r35
		FuncCall toStringHex Param_size : 1
		r101 = rax
		rdi = r101
		rsi = str__9
		FuncCall string.add Param_size : 2
		r100 = rax
		rdi = r100
		FuncCall print Param_size : 1
		r102 = rax
		rdi = str__10
		FuncCall println Param_size : 1
		r103 = rax
	rax = 0
	jump Label_23
Label_23:
