asciiTable__ [GV]
MAXCHUNK__ [GV]
MAXLENGTH__ [GV]
chunks__ [GV]
inputBuffer__ [GV]
outputBuffer__ [GV]

string[ 0 ] 
string[ 1 ] 
string[ 2 ] nChunk > MAXCHUNK!
string[ 3 ] 
string[ 4 ] Invalid input
string[ 5 ] 
string[ 6 ] Not Found!
string[ 7 ]  !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~

hex2int [Func]:
	r10 = rdi [rdi , ][r10]
	r8 = 0 [r10 , ][r8]
	r11 = 0 [r8 , r10 , ][r11]
Label_4:
		rdi = r10 [r8 , r10 , r11 , ][rdi]
		FuncCall string.length Param_size : 1 [r8 , rdi , r11 , r10 , ][rax]
		rdi = rax [rax , r8 , r11 , r10 , ][rdi]
	jump Label_3 if r11 jl rdi [r8 , rdi , r11 , r10 , ][]
	jump Label_2 [r8 , ][]
Label_3:
		rdi = r10 [r8 , r10 , r11 , ][rdi]
		rsi = r11 [r8 , rdi , r11 , r10 , ][rsi]
		FuncCall string.ord Param_size : 2 [r8 , rdi , rsi , r11 , r10 , ][rax]
		rdi = rax [rax , r8 , r11 , r10 , ][rdi]
	rdi = rdi [rdi , r8 , r11 , r10 , ][rdi]
	jump Label_8 if rdi jge 48 [rdi , r8 , r11 , r10 , ][]
	rsi = 0 [rdi , r8 , r11 , r10 , ][rsi]
	jump Label_9 [rsi , rdi , r8 , r11 , r10 , ][]
Label_8:
	rsi = rdi <= 57 [rdi , r8 , r11 , r10 , ][rsi]
	rsi = rsi [rsi , rdi , r8 , r11 , r10 , ][rsi]
Label_9:
	jump Label_6 if rsi je 1 [rsi , rdi , r8 , r11 , r10 , ][]
	jump Label_7 [rdi , r8 , r11 , r10 , ][]
Label_6:
	rsi = r8 * 16 [rdi , r8 , r11 , r10 , ][rsi]
	rdi = rsi + rdi [rdi , rsi , r11 , r10 , ][rdi]
	rdi = rdi - 48 [rdi , r11 , r10 , ][rdi]
	r8 = rdi [rdi , r11 , r10 , ][r8]
	jump Label_5 [r8 , r11 , r10 , ][]
Label_7:
	jump Label_12 if rdi jge 65 [rdi , r8 , r11 , r10 , ][]
	rsi = 0 [rdi , r8 , r11 , r10 , ][rsi]
	jump Label_13 [rsi , rdi , r8 , r11 , r10 , ][]
Label_12:
	rsi = rdi <= 70 [rdi , r8 , r11 , r10 , ][rsi]
	rsi = rsi [rdi , r8 , rsi , r11 , r10 , ][rsi]
Label_13:
	jump Label_10 if rsi je 1 [rsi , rdi , r8 , r11 , r10 , ][]
	jump Label_11 [rdi , r8 , r11 , r10 , ][]
Label_10:
	rsi = r8 * 16 [rdi , r8 , r11 , r10 , ][rsi]
	rdi = rsi + rdi [rsi , rdi , r11 , r10 , ][rdi]
	rdi = rdi - 65 [rdi , r11 , r10 , ][rdi]
	rdi = rdi + 10 [rdi , r11 , r10 , ][rdi]
	r8 = rdi [rdi , r11 , r10 , ][r8]
	jump Label_5 [r8 , r11 , r10 , ][]
Label_11:
	jump Label_16 if rdi jge 97 [rdi , r8 , r11 , r10 , ][]
	rsi = 0 [rdi , r8 , r11 , r10 , ][rsi]
	jump Label_17 [rsi , rdi , r8 , r11 , r10 , ][]
Label_16:
	rsi = rdi <= 102 [rdi , r8 , r11 , r10 , ][rsi]
	rsi = rsi [rdi , r8 , rsi , r11 , r10 , ][rsi]
Label_17:
	jump Label_14 if rsi je 1 [rsi , rdi , r8 , r11 , r10 , ][]
	jump Label_15 [][]
Label_14:
	rsi = r8 * 16 [rdi , r8 , r11 , r10 , ][rsi]
	rdi = rsi + rdi [rsi , rdi , r11 , r10 , ][rdi]
	rdi = rdi - 97 [rdi , r11 , r10 , ][rdi]
	rdi = rdi + 10 [rdi , r11 , r10 , ][rdi]
	r8 = rdi [rdi , r11 , r10 , ][r8]
	jump Label_5 [r8 , r11 , r10 , ][]
Label_15:
	rax = 0 [][rax]
	jump Label_0 [][]
Label_5:
Label_1:
	rdi = r11 [r8 , r11 , r10 , ][rdi]
	r11 = r11 + 1 [r8 , r11 , r10 , ][r11]
	jump Label_4 [r8 , r10 , r11 , ][]
Label_2:
	rax = r8 [r8 , ][rax]
	jump Label_0 [][]
Label_0:
int2chr [Func]:
	rdi = rdi [rdi , ][rdi]
	jump Label_22 if rdi jge 32 [rdi , ][]
	rsi = 0 [rdi , ][rsi]
	jump Label_23 [rsi , rdi , ][]
Label_22:
	rsi = rdi <= 126 [rdi , ][rsi]
	rsi = rsi [rsi , rdi , ][rsi]
Label_23:
	jump Label_20 if rsi je 1 [rsi , rdi , ][]
	jump Label_21 [][]
Label_20:
	rsi = rdi - 32 [rdi , ][rsi]
	r10 = rdi - 32 [rdi , rsi , ][r10]
		rdi = qword [ asciiTable__ ] [r10 , rsi , ][rdi]
		rsi = rsi [r10 , rdi , rsi , ][rsi]
		rdx = r10 [r10 , rdi , rsi , ][rdx]
		FuncCall string.substring Param_size : 3 [rdx , rdi , rsi , ][rax]
		rdi = rax [rax , ][rdi]
	rax = rdi [rdi , ][rax]
	jump Label_18 [][]
	jump Label_19 [][]
Label_21:
Label_19:
	rax = str__0 [][rax]
	jump Label_18 [][]
Label_18:
toStringHex [Func]:
	r10 = rdi [rdi , ][r10]
	rsi = str__1 [r10 , ][rsi]
	r11 = 28 [r10 , rsi , ][r11]
Label_28:
	jump Label_27 if r11 jge 0 [r10 , r11 , rsi , ][]
	jump Label_26 [rsi , ][]
Label_27:
	rdi = r10 >> r11 [r10 , r11 , rsi , ][rdi]
	rdi = rdi & 15 [r10 , r11 , rdi , rsi , ][rdi]
	rdi = rdi [r10 , rdi , r11 , rsi , ][rdi]
	jump Label_30 if rdi jl 10 [r10 , rdi , r11 , rsi , ][]
	jump Label_31 [r10 , rdi , r11 , rsi , ][]
Label_30:
	rdi = 48 + rdi [r10 , rdi , r11 , rsi , ][rdi]
		rdi = rdi [r10 , rdi , r11 , rsi , ][rdi]
		FuncCall int2chr Param_size : 1 [r10 , r11 , rdi , rsi , ][rax]
		r8 = rax [r10 , rax , r11 , rsi , ][r8]
		rdi = rsi [r10 , r8 , r11 , rsi , ][rdi]
		rsi = r8 [r10 , r8 , r11 , rdi , ][rsi]
		FuncCall string.add Param_size : 2 [r10 , r11 , rdi , rsi , ][rax]
		rdi = rax [r10 , rax , r11 , ][rdi]
	rsi = rdi [r10 , r11 , rdi , ][rsi]
	jump Label_29 [r10 , r11 , rsi , ][]
Label_31:
	rdi = 65 + rdi [r10 , rdi , r11 , rsi , ][rdi]
	rdi = rdi - 10 [r10 , r11 , rdi , rsi , ][rdi]
		rdi = rdi [r10 , r11 , rdi , rsi , ][rdi]
		FuncCall int2chr Param_size : 1 [r10 , r11 , rdi , rsi , ][rax]
		r8 = rax [r10 , rax , r11 , rsi , ][r8]
		rdi = rsi [r10 , r11 , r8 , rsi , ][rdi]
		rsi = r8 [r10 , r11 , r8 , rdi , ][rsi]
		FuncCall string.add Param_size : 2 [r10 , r11 , rdi , rsi , ][rax]
		rdi = rax [r10 , rax , r11 , ][rdi]
	rsi = rdi [r10 , rdi , r11 , ][rsi]
Label_29:
Label_25:
	rdi = r11 - 4 [r10 , r11 , rsi , ][rdi]
	r11 = rdi [r10 , rdi , rsi , ][r11]
	jump Label_28 [r10 , r11 , rsi , ][]
Label_26:
	rax = rsi [rsi , ][rax]
	jump Label_24 [][]
Label_24:
rotate_left [Func]:
	rdi = rdi [rdi , rsi , ][rdi]
	rsi = rsi [rdi , rsi , ][rsi]
	jump Label_34 if rsi je 1 [rsi , rdi , ][]
	jump Label_35 [rsi , rdi , ][]
Label_34:
	rsi = rdi & 2147483647 [rdi , ][rsi]
	rsi = rsi << 1 [rdi , rsi , ][rsi]
	rdi = rdi >> 31 [rdi , rsi , ][rdi]
	rdi = rdi & 1 [rdi , rsi , ][rdi]
	rdi = rsi | rdi [rdi , rsi , ][rdi]
	rax = rdi [rdi , ][rax]
	jump Label_32 [][]
	jump Label_33 [rsi , rdi , ][]
Label_35:
Label_33:
	jump Label_37 if rsi je 31 [rsi , rdi , ][]
	jump Label_38 [rsi , rdi , ][]
Label_37:
	rsi = rdi & 1 [rdi , ][rsi]
	rsi = rsi << 31 [rsi , rdi , ][rsi]
	rdi = rdi >> 1 [rdi , rsi , ][rdi]
	rdi = rdi & 2147483647 [rsi , rdi , ][rdi]
	rdi = rsi | rdi [rdi , rsi , ][rdi]
	rax = rdi [rdi , ][rax]
	jump Label_32 [][]
	jump Label_36 [rsi , rdi , ][]
Label_38:
Label_36:
	r10 = 32 - rsi [rsi , rdi , ][r10]
	r10 = 1 << r10 [rsi , rdi , r10 , ][r10]
	r10 = r10 - 1 [r10 , rsi , rdi , ][r10]
	r10 = rdi & r10 [rsi , rdi , r10 , ][r10]
	r10 = r10 << rsi [rsi , rdi , r10 , ][r10]
	r11 = 32 - rsi [rsi , rdi , r10 , ][r11]
	rdi = rdi >> r11 [rsi , r11 , rdi , r10 , ][rdi]
	rsi = 1 << rsi [rdi , rsi , r10 , ][rsi]
	rsi = rsi - 1 [rdi , r10 , rsi , ][rsi]
	rdi = rdi & rsi [rdi , rsi , r10 , ][rdi]
	rdi = r10 | rdi [r10 , rdi , ][rdi]
	rax = rdi [rdi , ][rax]
	jump Label_32 [][]
Label_32:
add [Func]:
	rdi = rdi [rdi , rsi , ][rdi]
	rsi = rsi [rdi , rsi , ][rsi]
	r10 = rdi & 65535 [rdi , rsi , ][r10]
	r11 = rsi & 65535 [r10 , rdi , rsi , ][r11]
	r10 = r10 + r11 [r10 , rdi , rsi , r11 , ][r10]
	r10 = r10 [r10 , rdi , rsi , ][r10]
	rdi = rdi >> 16 [r10 , rdi , rsi , ][rdi]
	rdi = rdi & 65535 [rdi , r10 , rsi , ][rdi]
	rsi = rsi >> 16 [r10 , rsi , rdi , ][rsi]
	rsi = rsi & 65535 [r10 , rdi , rsi , ][rsi]
	rdi = rdi + rsi [r10 , rsi , rdi , ][rdi]
	rsi = r10 >> 16 [r10 , rdi , ][rsi]
	rdi = rdi + rsi [r10 , rsi , rdi , ][rdi]
	rdi = rdi & 65535 [r10 , rdi , ][rdi]
	rdi = rdi [r10 , rdi , ][rdi]
	rdi = rdi << 16 [r10 , rdi , ][rdi]
	rsi = r10 & 65535 [r10 , rdi , ][rsi]
	rdi = rdi | rsi [rdi , rsi , ][rdi]
	rax = rdi [rdi , ][rax]
	jump Label_39 [][]
Label_39:
lohi [Func]:
	rdi = rdi [rdi , rsi , ][rdi]
	rsi = rsi [rdi , rsi , ][rsi]
	rsi = rsi << 16 [rsi , rdi , ][rsi]
	rdi = rdi | rsi [rsi , rdi , ][rdi]
	rax = rdi [rdi , ][rax]
	jump Label_40 [][]
Label_40:
sha1 [Func]:
	rdi = rdi [rdi , rsi , ][rdi]
	rsi = rsi [rdi , rsi , ][rsi]
	r10 = rsi + 64 [rdi , rsi , ][r10]
	r10 = r10 - 56 [r10 , rdi , rsi , ][r10]
	r10 = r10 / 64 [rdi , r10 , rsi , ][r10]
	r10 = r10 + 1 [rdi , r10 , rsi , ][r10]
	r10 = r10 [rdi , r10 , rsi , ][r10]
	jump Label_43 if r10 jg qword [ MAXCHUNK__ ] [rdi , r10 , rsi , ][]
	jump Label_44 [rdi , r10 , rsi , ][]
Label_43:
		rdi = str__2 [][rdi]
		FuncCall println Param_size : 1 [rdi , ][rax]
		rdi = rax [rax , ][rdi]
	rax = 0 [][rax]
	jump Label_41 [][]
	jump Label_42 [rdi , r10 , rsi , ][]
Label_44:
Label_42:
	r11 = 0 [rdi , r10 , rsi , ][r11]
Label_48:
	jump Label_47 if r11 jl r10 [r11 , rdi , r10 , rsi , ][]
	jump Label_46 [rdi , r10 , rsi , ][]
Label_47:
	r8 = 0 [r11 , rdi , r10 , rsi , ][r8]
Label_52:
	jump Label_51 if r8 jl 80 [r11 , rdi , r10 , r8 , rsi , ][]
	jump Label_50 [r11 , rdi , r10 , rsi , ][]
Label_51:
	r9 = qword [ chunks__ ] [r11 , rdi , r10 , r8 , rsi , ][r9]
	r9 = qword [r9 + r11 * 8] [r11 , rdi , r10 , r8 , r9 , rsi , ][r9]
	qword [r9 + r8 * 8] = 0 [r11 , rdi , r9 , r10 , r8 , rsi , ][]
Label_49:
	r9 = r8 [r11 , rdi , r10 , r8 , rsi , ][r9]
	r8 = r8 + 1 [r11 , rdi , r10 , r8 , rsi , ][r8]
	jump Label_52 [r11 , rdi , r10 , r8 , rsi , ][]
Label_50:
Label_45:
	r8 = r11 [r11 , rdi , r10 , rsi , ][r8]
	r11 = r11 + 1 [r11 , rdi , r10 , rsi , ][r11]
	jump Label_48 [r11 , rdi , r10 , rsi , ][]
Label_46:
	r11 = 0 [rdi , r10 , rsi , ][r11]
Label_56:
	jump Label_55 if r11 jl rsi [r11 , rdi , r10 , rsi , ][]
	jump Label_54 [r11 , r10 , rsi , ][]
Label_55:
	r8 = qword [ chunks__ ] [r11 , rdi , r10 , rsi , ][r8]
	r9 = r11 / 64 [r11 , rdi , r10 , r8 , rsi , ][r9]
	r8 = qword [r8 + r9 * 8] [r11 , rdi , r10 , r9 , r8 , rsi , ][r8]
	r9 = r11 % 64 [r11 , rdi , r10 , r8 , rsi , ][r9]
	r9 = r9 / 4 [r9 , r11 , rdi , r10 , r8 , rsi , ][r9]
	r12 = qword [ chunks__ ] [r11 , rdi , r10 , r8 , rsi , r9 , ][r12]
	r13 = r11 / 64 [r11 , rdi , r10 , r8 , r12 , rsi , r9 , ][r13]
	r12 = qword [r12 + r13 * 8] [r11 , rdi , r10 , r8 , r12 , rsi , r13 , r9 , ][r12]
	r13 = r11 % 64 [r12 , r11 , rdi , r10 , r8 , rsi , r9 , ][r13]
	r13 = r13 / 4 [r12 , r11 , rdi , r10 , r13 , r8 , rsi , r9 , ][r13]
	r14 = r11 % 4 [r12 , r11 , rdi , r13 , r10 , r8 , rsi , r9 , ][r14]
	r14 = 3 - r14 [r12 , r11 , rdi , r13 , r10 , r8 , r14 , rsi , r9 , ][r14]
	r14 = r14 * 8 [r14 , r12 , r11 , rdi , r13 , r10 , r8 , rsi , r9 , ][r14]
	r14 = qword [rdi + r11 * 8] << r14 [r12 , r11 , rdi , r13 , r10 , r8 , r14 , rsi , r9 , ][r14]
	r12 = qword [r12 + r13 * 8] | r14 [r12 , r13 , r11 , rdi , r14 , r10 , r8 , rsi , r9 , ][r12]
	qword [r8 + r9 * 8] = r12 [r12 , r11 , rdi , r10 , r8 , rsi , r9 , ][]
Label_53:
	r8 = r11 [r11 , rdi , r10 , rsi , ][r8]
	r11 = r11 + 1 [r11 , rdi , r10 , rsi , ][r11]
	jump Label_56 [r11 , rdi , r10 , rsi , ][]
Label_54:
	rdi = qword [ chunks__ ] [r11 , r10 , rsi , ][rdi]
	r8 = r11 / 64 [r11 , r10 , rdi , rsi , ][r8]
	rdi = qword [rdi + r8 * 8] [r11 , r8 , r10 , rdi , rsi , ][rdi]
	r8 = r11 % 64 [r11 , r10 , rdi , rsi , ][r8]
	r8 = r8 / 4 [r11 , r10 , rdi , r8 , rsi , ][r8]
	r9 = qword [ chunks__ ] [r11 , r10 , rdi , r8 , rsi , ][r9]
	r12 = r11 / 64 [r11 , r10 , rdi , r8 , rsi , r9 , ][r12]
	r9 = qword [r9 + r12 * 8] [r11 , r10 , rdi , r8 , rsi , r12 , r9 , ][r9]
	r12 = r11 % 64 [r11 , r10 , r9 , rdi , r8 , rsi , ][r12]
	r12 = r12 / 4 [r11 , r10 , r12 , r9 , rdi , r8 , rsi , ][r12]
	r11 = r11 % 4 [r11 , r10 , r9 , rdi , r12 , r8 , rsi , ][r11]
	r11 = 3 - r11 [r10 , r9 , rdi , r11 , r12 , r8 , rsi , ][r11]
	r11 = r11 * 8 [r11 , r10 , r9 , rdi , r12 , r8 , rsi , ][r11]
	r11 = 128 << r11 [r10 , r11 , r9 , rdi , r12 , r8 , rsi , ][r11]
	r11 = qword [r9 + r12 * 8] | r11 [r11 , r10 , r9 , rdi , r12 , r8 , rsi , ][r11]
	qword [rdi + r8 * 8] = r11 [r10 , r11 , rdi , r8 , rsi , ][]
	rdi = qword [ chunks__ ] [r10 , rsi , ][rdi]
	r11 = r10 - 1 [r10 , rdi , rsi , ][r11]
	rdi = qword [rdi + r11 * 8] [r10 , r11 , rdi , rsi , ][rdi]
	r11 = 15 [rdi , r10 , rsi , ][r11]
	r8 = rsi << 3 [r11 , rdi , r10 , rsi , ][r8]
	qword [rdi + r11 * 8] = r8 [r11 , rdi , r10 , rsi , r8 , ][]
	rdi = qword [ chunks__ ] [r10 , rsi , ][rdi]
	r11 = r10 - 1 [r10 , rdi , rsi , ][r11]
	rdi = qword [rdi + r11 * 8] [r11 , r10 , rdi , rsi , ][rdi]
	r11 = 14 [r10 , rdi , rsi , ][r11]
	rsi = rsi >> 29 [r11 , r10 , rdi , rsi , ][rsi]
	rsi = rsi & 7 [rsi , r11 , r10 , rdi , ][rsi]
	qword [rdi + r11 * 8] = rsi [r11 , r10 , rsi , rdi , ][]
	r9 = 1732584193 [r10 , ][r9]
	rdi = 61389 << 16 [r10 , r9 , ][rdi]
	rdi = 43913 | rdi [r10 , r9 , rdi , ][rdi]
	r12 = rdi [r10 , rdi , r9 , ][r12]
	rdi = 39098 << 16 [r10 , r12 , r9 , ][rdi]
	rdi = 56574 | rdi [rdi , r10 , r12 , r9 , ][rdi]
	r13 = rdi [r10 , rdi , r12 , r9 , ][r13]
	r14 = 271733878 [r13 , r10 , r12 , r9 , ][r14]
	rdi = 50130 << 16 [r13 , r14 , r10 , r12 , r9 , ][rdi]
	rdi = 57840 | rdi [r13 , r14 , r10 , r12 , r9 , rdi , ][rdi]
	r15 = rdi [r13 , rdi , r14 , r10 , r12 , r9 , ][r15]
	r11 = 0 [r13 , r14 , r10 , r12 , r9 , r15 , ][r11]
Label_60:
	jump Label_59 if r11 jl r10 [r13 , r11 , r14 , r10 , r12 , r9 , r15 , ][]
	jump Label_58 [r13 , r14 , r12 , r9 , r15 , ][]
Label_59:
	r8 = 16 [r13 , r11 , r14 , r10 , r12 , r9 , r15 , ][r8]
Label_64:
	jump Label_63 if r8 jl 80 [r13 , r11 , r14 , r10 , r8 , r12 , r9 , r15 , ][]
	jump Label_62 [r13 , r11 , r14 , r10 , r12 , r9 , r15 , ][]
Label_63:
	rdi = qword [ chunks__ ] [r13 , r11 , r14 , r10 , r8 , r12 , r9 , r15 , ][rdi]
	reg16 = qword [rdi + r11 * 8] [r13 , rdi , r11 , r14 , r10 , r8 , r12 , r9 , r15 , ][reg16]
	rdi = qword [ chunks__ ] [r13 , r11 , r14 , r10 , r8 , r12 , reg16 , r9 , r15 , ][rdi]
	rdi = qword [rdi + r11 * 8] [r13 , rdi , r11 , r14 , r10 , r8 , r12 , reg16 , r9 , r15 , ][rdi]
	rsi = r8 - 3 [r13 , r11 , r14 , r10 , r8 , r12 , reg16 , r9 , rdi , r15 , ][rsi]
	reg17 = qword [ chunks__ ] [r13 , r11 , rsi , r14 , r10 , r8 , r12 , reg16 , r9 , rdi , r15 , ][reg17]
	reg17 = qword [reg17 + r11 * 8] [r13 , r11 , rsi , r14 , r10 , reg17 , r8 , r12 , reg16 , r9 , rdi , r15 , ][reg17]
	reg18 = r8 - 8 [r13 , r11 , rsi , r14 , r10 , r8 , r12 , reg16 , r9 , rdi , reg17 , r15 , ][reg18]
	rdi = qword [rdi + rsi * 8] ^ qword [reg17 + reg18 * 8] [r11 , r12 , r15 , reg18 , r13 , rsi , r14 , r10 , r8 , reg16 , r9 , rdi , reg17 , ][rdi]
	rsi = qword [ chunks__ ] [r13 , r11 , r14 , r10 , r8 , rdi , r12 , reg16 , r9 , r15 , ][rsi]
	rsi = qword [rsi + r11 * 8] [r13 , r11 , r14 , r10 , r8 , rdi , r12 , reg16 , r9 , r15 , rsi , ][rsi]
	reg17 = r8 - 14 [r13 , r11 , r14 , r10 , r8 , rdi , r12 , reg16 , r9 , rsi , r15 , ][reg17]
	rdi = rdi ^ qword [rsi + reg17 * 8] [r13 , r11 , reg17 , r14 , r10 , rdi , r8 , r12 , reg16 , r9 , rsi , r15 , ][rdi]
	rsi = qword [ chunks__ ] [r13 , r11 , rdi , r14 , r10 , r8 , r12 , reg16 , r9 , r15 , ][rsi]
	rsi = qword [rsi + r11 * 8] [r13 , r11 , rdi , r14 , rsi , r10 , r8 , r12 , reg16 , r9 , r15 , ][rsi]
	reg17 = r8 - 16 [r13 , r11 , rdi , r14 , r10 , r8 , r12 , rsi , reg16 , r9 , r15 , ][reg17]
	rdi = rdi ^ qword [rsi + reg17 * 8] [r13 , r11 , rdi , r14 , reg17 , r10 , r8 , r12 , rsi , reg16 , r9 , r15 , ][rdi]
		rdi = rdi [r13 , r11 , r14 , r10 , rdi , r8 , r12 , reg16 , r9 , r15 , ][rdi]
		rsi = 1 [r13 , r11 , r14 , r10 , r8 , r12 , reg16 , r9 , rdi , r15 , ][rsi]
		FuncCall rotate_left Param_size : 2 [r13 , r11 , r14 , r10 , r8 , r12 , reg16 , r9 , rdi , r15 , rsi , ][rax]
		rdi = rax [r13 , rax , r11 , r14 , r10 , r8 , r12 , reg16 , r9 , r15 , ][rdi]
	qword [reg16 + r8 * 8] = rdi [r13 , rdi , r11 , r14 , r10 , r8 , r12 , reg16 , r9 , r15 , ][]
Label_61:
	rdi = r8 [r13 , r11 , r14 , r10 , r8 , r12 , r9 , r15 , ][rdi]
	r8 = r8 + 1 [r13 , r11 , r14 , r10 , r8 , r12 , r9 , r15 , ][r8]
	jump Label_64 [r13 , r11 , r14 , r10 , r8 , r12 , r9 , r15 , ][]
Label_62:
	reg16 = r9 [r13 , r11 , r14 , r10 , r12 , r9 , r15 , ][reg16]
	reg17 = r12 [r13 , r11 , r14 , r10 , r12 , r9 , r15 , reg16 , ][reg17]
	reg18 = r13 [r13 , r11 , r14 , r10 , r12 , r9 , r15 , reg17 , reg16 , ][reg18]
	reg19 = r14 [r13 , reg18 , r11 , r14 , r10 , r12 , r9 , r15 , reg17 , reg16 , ][reg19]
	reg20 = r15 [r13 , reg18 , reg19 , r11 , r14 , r10 , r12 , r9 , r15 , reg17 , reg16 , ][reg20]
	r8 = 0 [r13 , reg18 , reg19 , r11 , r14 , r10 , r12 , r9 , reg17 , reg16 , r15 , reg20 , ][r8]
Label_68:
	jump Label_67 if r8 jl 80 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][]
	jump Label_66 [r13 , reg18 , reg19 , r11 , r14 , r10 , r12 , r9 , reg16 , reg17 , r15 , reg20 , ][]
Label_67:
	jump Label_70 if r8 jl 20 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][]
	jump Label_71 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][]
Label_70:
	rdi = reg17 & reg18 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][rdi]
	rsi = reg17 [reg18 , r11 , r12 , reg16 , r15 , rdi , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][rsi]
	~ rsi [reg18 , r11 , r12 , reg16 , r15 , rdi , reg20 , r13 , reg19 , r14 , r10 , r8 , rsi , r9 , reg17 , ][rsi]
	rsi = rsi & reg19 [reg18 , r11 , r12 , reg16 , r15 , rdi , reg20 , r13 , reg19 , r14 , r10 , r8 , rsi , r9 , reg17 , ][rsi]
	rdi = rdi | rsi [reg18 , r11 , rsi , r12 , reg16 , r15 , rdi , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][rdi]
	reg21 = rdi [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , rdi , ][reg21]
	reg22 = 1518500249 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , reg21 , ][reg22]
	jump Label_69 [reg22 , reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , reg21 , ][]
Label_71:
	jump Label_72 if r8 jl 40 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][]
	jump Label_73 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][]
Label_72:
	rdi = reg17 ^ reg18 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][rdi]
	rdi = rdi ^ reg19 [reg18 , rdi , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][rdi]
	reg21 = rdi [reg18 , r11 , r12 , rdi , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][reg21]
	reg22 = 1859775393 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , reg21 , ][reg22]
	jump Label_69 [reg22 , reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , reg21 , ][]
Label_73:
	jump Label_74 if r8 jl 60 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][]
	jump Label_75 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][]
Label_74:
	rdi = reg17 & reg18 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][rdi]
	rsi = reg17 & reg19 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , rdi , r14 , r10 , r8 , r9 , reg17 , ][rsi]
	rdi = rdi | rsi [reg18 , r11 , rsi , r12 , reg16 , r15 , reg20 , r13 , reg19 , rdi , r14 , r10 , r8 , r9 , reg17 , ][rdi]
	rsi = reg18 & reg19 [reg18 , rdi , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][rsi]
	rdi = rdi | rsi [reg18 , rdi , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , rsi , r9 , reg17 , ][rdi]
	reg21 = rdi [reg18 , r11 , r12 , reg16 , r15 , rdi , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][reg21]
	rdi = 36635 << 16 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , reg21 , ][rdi]
	rdi = 48348 | rdi [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , rdi , r9 , reg17 , reg21 , ][rdi]
	reg22 = rdi [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , rdi , r8 , r9 , reg17 , reg21 , ][reg22]
	jump Label_69 [reg22 , reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , reg21 , ][]
Label_75:
	rdi = reg17 ^ reg18 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][rdi]
	rdi = rdi ^ reg19 [rdi , reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][rdi]
	reg21 = rdi [reg18 , r11 , r12 , reg16 , r15 , rdi , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][reg21]
	rdi = 51810 << 16 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , reg21 , ][rdi]
	rdi = 49622 | rdi [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , rdi , reg17 , reg21 , ][rdi]
	reg22 = rdi [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , rdi , r14 , r10 , r8 , r9 , reg17 , reg21 , ][reg22]
Label_69:
		rdi = reg16 [reg22 , reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , reg21 , ][rdi]
		rsi = 5 [reg22 , reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , rdi , reg17 , reg21 , ][rsi]
		FuncCall rotate_left Param_size : 2 [reg22 , reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , rdi , reg17 , rsi , reg21 , ][rax]
		rdi = rax [reg22 , reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , rax , r14 , r10 , r8 , r9 , reg17 , reg21 , ][rdi]
		rdi = rdi [reg22 , reg18 , r11 , r12 , reg16 , r15 , rdi , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , reg21 , ][rdi]
		rsi = reg20 [reg22 , reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , rdi , reg17 , reg21 , ][rsi]
		FuncCall add Param_size : 2 [reg22 , reg18 , r11 , r12 , reg16 , r15 , r13 , reg19 , r14 , r10 , r8 , r9 , rdi , reg17 , rsi , reg21 , ][rax]
		reg20 = rax [reg22 , reg18 , r11 , r12 , reg16 , r15 , r13 , reg19 , rax , r14 , r10 , r8 , r9 , reg17 , reg21 , ][reg20]
		rdi = reg21 [reg22 , reg18 , r11 , r12 , reg16 , r15 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , reg21 , reg20 , ][rdi]
		rsi = reg22 [reg22 , reg18 , r11 , r12 , reg16 , r15 , r13 , reg19 , r14 , r10 , r8 , r9 , rdi , reg17 , reg20 , ][rsi]
		FuncCall add Param_size : 2 [reg18 , r11 , r12 , reg16 , r15 , r13 , reg19 , r14 , r10 , r8 , r9 , rdi , reg17 , rsi , reg20 , ][rax]
		rsi = rax [reg18 , r11 , r12 , reg16 , r15 , r13 , reg19 , rax , r14 , r10 , r8 , r9 , reg17 , reg20 , ][rsi]
		rdi = reg20 [reg18 , r11 , r12 , reg16 , r15 , rsi , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , reg20 , ][rdi]
		rsi = rsi [reg18 , r11 , r12 , reg16 , r15 , rsi , r13 , reg19 , r14 , r10 , r8 , r9 , rdi , reg17 , ][rsi]
		FuncCall add Param_size : 2 [reg18 , r11 , r12 , reg16 , r15 , r13 , reg19 , r14 , r10 , r8 , r9 , rdi , reg17 , rsi , ][rax]
		rdi = rax [reg18 , r11 , r12 , reg16 , r15 , r13 , reg19 , rax , r14 , r10 , r8 , r9 , reg17 , ][rdi]
	rsi = qword [ chunks__ ] [reg18 , r11 , r12 , reg16 , r15 , rdi , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][rsi]
	rsi = qword [rsi + r11 * 8] [reg18 , r11 , r12 , reg16 , r15 , rsi , rdi , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][rsi]
		rdi = rdi [reg18 , r11 , r12 , reg16 , r15 , rdi , r13 , reg19 , r14 , r10 , r8 , r9 , rsi , reg17 , ][rdi]
		rsi = qword [rsi + r8 * 8] [reg18 , r11 , r12 , reg16 , r15 , r13 , reg19 , r14 , r10 , r8 , r9 , rdi , rsi , reg17 , ][rsi]
		FuncCall add Param_size : 2 [reg18 , r11 , r12 , reg16 , r15 , r13 , reg19 , r14 , r10 , r8 , r9 , rdi , reg17 , rsi , ][rax]
		rdi = rax [reg18 , r11 , r12 , reg16 , r15 , r13 , reg19 , rax , r14 , r10 , r8 , r9 , reg17 , ][rdi]
	reg21 = rdi [reg18 , rdi , r11 , r12 , reg16 , r15 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][reg21]
	reg20 = reg19 [reg18 , r11 , r12 , reg16 , r15 , r13 , reg19 , r14 , r10 , r8 , reg21 , r9 , reg17 , ][reg20]
	reg19 = reg18 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , r14 , r10 , r8 , reg21 , r9 , reg17 , ][reg19]
		rdi = reg17 [r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , reg21 , r9 , reg17 , ][rdi]
		rsi = 30 [r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , reg21 , r9 , rdi , ][rsi]
		FuncCall rotate_left Param_size : 2 [r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , reg21 , r9 , rdi , rsi , ][rax]
		rdi = rax [r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , rax , r14 , r10 , r8 , reg21 , r9 , ][rdi]
	reg18 = rdi [r11 , r12 , reg16 , r15 , rdi , reg20 , r13 , reg19 , r14 , r10 , r8 , reg21 , r9 , ][reg18]
	reg17 = reg16 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , reg21 , r9 , ][reg17]
	reg16 = reg21 [reg18 , r11 , r12 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , reg21 , r9 , reg17 , ][reg16]
Label_65:
	rdi = r8 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][rdi]
	r8 = r8 + 1 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][r8]
	jump Label_68 [reg18 , r11 , r12 , reg16 , r15 , reg20 , r13 , reg19 , r14 , r10 , r8 , r9 , reg17 , ][]
Label_66:
		rdi = r9 [r13 , reg18 , reg19 , r11 , r14 , r10 , r12 , r9 , reg16 , reg17 , r15 , reg20 , ][rdi]
		rsi = reg16 [r13 , reg18 , reg19 , r11 , r14 , r10 , r12 , rdi , reg16 , reg17 , r15 , reg20 , ][rsi]
		FuncCall add Param_size : 2 [r13 , reg18 , reg19 , r11 , r14 , r10 , r12 , rdi , reg17 , r15 , rsi , reg20 , ][rax]
		rdi = rax [r13 , reg18 , reg19 , rax , r11 , r14 , r10 , r12 , reg17 , r15 , reg20 , ][rdi]
	r9 = rdi [r13 , reg18 , rdi , reg19 , r11 , r14 , r10 , r12 , reg17 , r15 , reg20 , ][r9]
		rdi = r12 [r13 , reg18 , reg19 , r11 , r14 , r10 , r12 , r9 , reg17 , r15 , reg20 , ][rdi]
		rsi = reg17 [r13 , reg18 , reg19 , r11 , r14 , r10 , r9 , rdi , reg17 , r15 , reg20 , ][rsi]
		FuncCall add Param_size : 2 [r13 , reg18 , reg19 , r11 , r14 , r10 , r9 , rdi , r15 , rsi , reg20 , ][rax]
		rdi = rax [r13 , reg18 , reg19 , rax , r11 , r14 , r10 , r9 , r15 , reg20 , ][rdi]
	r12 = rdi [r13 , reg18 , reg19 , r11 , r14 , rdi , r10 , r9 , r15 , reg20 , ][r12]
		rdi = r13 [r13 , reg18 , reg19 , r11 , r14 , r10 , r12 , r9 , r15 , reg20 , ][rdi]
		rsi = reg18 [reg18 , reg19 , r11 , r14 , r10 , r12 , r9 , rdi , r15 , reg20 , ][rsi]
		FuncCall add Param_size : 2 [reg19 , r11 , r14 , r10 , r12 , r9 , rdi , r15 , rsi , reg20 , ][rax]
		rdi = rax [reg19 , rax , r11 , r14 , r10 , r12 , r9 , r15 , reg20 , ][rdi]
	r13 = rdi [reg19 , r11 , r14 , r10 , r12 , r9 , r15 , rdi , reg20 , ][r13]
		rdi = r14 [r13 , reg19 , r11 , r14 , r10 , r12 , r9 , r15 , reg20 , ][rdi]
		rsi = reg19 [r13 , reg19 , r11 , r10 , r12 , r9 , rdi , r15 , reg20 , ][rsi]
		FuncCall add Param_size : 2 [r13 , r11 , r10 , r12 , r9 , rdi , r15 , rsi , reg20 , ][rax]
		rdi = rax [r13 , rax , r11 , r10 , r12 , r9 , r15 , reg20 , ][rdi]
	r14 = rdi [r13 , r11 , r10 , r12 , r9 , r15 , rdi , reg20 , ][r14]
		rdi = r15 [r13 , r11 , r14 , r10 , r12 , r9 , r15 , reg20 , ][rdi]
		rsi = reg20 [r13 , r11 , r14 , r10 , r12 , r9 , rdi , reg20 , ][rsi]
		FuncCall add Param_size : 2 [r13 , r11 , r14 , r10 , r12 , r9 , rdi , rsi , ][rax]
		rdi = rax [r13 , rax , r11 , r14 , r10 , r12 , r9 , ][rdi]
	r15 = rdi [r13 , r11 , r14 , r10 , r12 , r9 , rdi , ][r15]
Label_57:
	rdi = r11 [r13 , r11 , r14 , r10 , r12 , r9 , r15 , ][rdi]
	r11 = r11 + 1 [r13 , r11 , r14 , r10 , r12 , r9 , r15 , ][r11]
	jump Label_60 [r13 , r11 , r14 , r10 , r12 , r9 , r15 , ][]
Label_58:
	rdi = qword [ outputBuffer__ ] [r13 , r14 , r12 , r9 , r15 , ][rdi]
	rsi = 0 [r13 , r14 , r12 , rdi , r9 , r15 , ][rsi]
	qword [rdi + rsi * 8] = r9 [rsi , r13 , r14 , r12 , rdi , r9 , r15 , ][]
	rdi = qword [ outputBuffer__ ] [r13 , r14 , r12 , r15 , ][rdi]
	rsi = 1 [r13 , r14 , rdi , r12 , r15 , ][rsi]
	qword [rdi + rsi * 8] = r12 [rsi , r13 , r14 , rdi , r12 , r15 , ][]
	rdi = qword [ outputBuffer__ ] [r13 , r14 , r15 , ][rdi]
	rsi = 2 [r13 , r14 , rdi , r15 , ][rsi]
	qword [rdi + rsi * 8] = r13 [r13 , r14 , rsi , rdi , r15 , ][]
	rdi = qword [ outputBuffer__ ] [r14 , r15 , ][rdi]
	rsi = 3 [rdi , r14 , r15 , ][rsi]
	qword [rdi + rsi * 8] = r14 [rdi , r14 , r15 , rsi , ][]
	rdi = qword [ outputBuffer__ ] [r15 , ][rdi]
	rsi = 4 [r15 , rdi , ][rsi]
	qword [rdi + rsi * 8] = r15 [rsi , r15 , rdi , ][]
	rax = qword [ outputBuffer__ ] [][rax]
	jump Label_41 [][]
Label_41:
computeSHA1 [Func]:
	r10 = rdi [rdi , ][r10]
	r11 = 0 [r10 , ][r11]
Label_80:
		rdi = r10 [r10 , r11 , ][rdi]
		FuncCall string.length Param_size : 1 [r10 , rdi , r11 , ][rax]
		rdi = rax [rax , r10 , r11 , ][rdi]
	jump Label_79 if r11 jl rdi [rdi , r10 , r11 , ][]
	jump Label_78 [r10 , ][]
Label_79:
	r8 = qword [ inputBuffer__ ] [r10 , r11 , ][r8]
		rdi = r10 [r8 , r10 , r11 , ][rdi]
		rsi = r11 [r8 , r10 , rdi , r11 , ][rsi]
		FuncCall string.ord Param_size : 2 [r8 , r10 , rdi , rsi , r11 , ][rax]
		rdi = rax [r8 , rax , r10 , r11 , ][rdi]
	qword [r8 + r11 * 8] = rdi [rdi , r8 , r10 , r11 , ][]
Label_77:
	rdi = r11 [r10 , r11 , ][rdi]
	r11 = r11 + 1 [r10 , r11 , ][r11]
	jump Label_80 [r10 , r11 , ][]
Label_78:
		rdi = r10 [r10 , ][rdi]
		FuncCall string.length Param_size : 1 [rdi , ][rax]
		rsi = rax [rax , ][rsi]
		rdi = qword [ inputBuffer__ ] [rsi , ][rdi]
		rsi = rsi [rsi , rdi , ][rsi]
		FuncCall sha1 Param_size : 2 [rdi , rsi , ][rax]
		rdi = rax [rax , ][rdi]
	rsi = rdi [rdi , ][rsi]
	r11 = 0 [rsi , ][r11]
Label_84:
		rdi = rsi [rsi , r11 , ][rdi]
		FuncCall array.size Param_size : 1 [rsi , rdi , r11 , ][rax]
		rdi = rax [rax , rsi , r11 , ][rdi]
	jump Label_83 if r11 jl rdi [rsi , rdi , r11 , ][]
	jump Label_82 [][]
Label_83:
		rdi = qword [rsi + r11 * 8] [rsi , r11 , ][rdi]
		FuncCall toStringHex Param_size : 1 [rsi , rdi , r11 , ][rax]
		rdi = rax [rax , rsi , r11 , ][rdi]
		rdi = rdi [rsi , rdi , r11 , ][rdi]
		FuncCall print Param_size : 1 [rsi , rdi , r11 , ][rax]
		rdi = rax [rax , rsi , r11 , ][rdi]
Label_81:
	rdi = r11 [rsi , r11 , ][rdi]
	r11 = r11 + 1 [rsi , r11 , ][r11]
	jump Label_84 [rsi , r11 , ][]
Label_82:
		rdi = str__3 [][rdi]
		FuncCall println Param_size : 1 [rdi , ][rax]
		rdi = rax [rax , ][rdi]
Label_76:
nextLetter [Func]:
	rdi = rdi [rdi , ][rdi]
	jump Label_87 if rdi je 122 [rdi , ][]
	jump Label_88 [rdi , ][]
Label_87:
	rdi = 1 [][rdi]
	- rdi [rdi , ][rdi]
	rax = rdi [rdi , ][rax]
	jump Label_85 [][]
	jump Label_86 [rdi , ][]
Label_88:
Label_86:
	jump Label_90 if rdi je 90 [rdi , ][]
	jump Label_91 [rdi , ][]
Label_90:
	rax = 97 [][rax]
	jump Label_85 [][]
	jump Label_89 [rdi , ][]
Label_91:
Label_89:
	jump Label_93 if rdi je 57 [rdi , ][]
	jump Label_94 [rdi , ][]
Label_93:
	rax = 65 [][rax]
	jump Label_85 [][]
	jump Label_92 [rdi , ][]
Label_94:
Label_92:
	rdi = rdi + 1 [rdi , ][rdi]
	rax = rdi [rdi , ][rax]
	jump Label_85 [][]
Label_85:
nextText [Func]:
	r10 = rdi [rdi , rsi , ][r10]
	rdi = rsi [r10 , rsi , ][rdi]
	rdi = rdi - 1 [r10 , rdi , ][rdi]
	rsi = rdi [rdi , r10 , ][rsi]
Label_99:
	jump Label_98 if rsi jge 0 [r10 , rsi , ][]
	jump Label_97 [][]
Label_98:
		rdi = qword [r10 + rsi * 8] [r10 , rsi , ][rdi]
		FuncCall nextLetter Param_size : 1 [r10 , rsi , rdi , ][rax]
		rdi = rax [rax , r10 , rsi , ][rdi]
	qword [r10 + rsi * 8] = rdi [rdi , r10 , rsi , ][]
	rdi = 1 [r10 , rsi , ][rdi]
	- rdi [r10 , rsi , rdi , ][rdi]
	jump Label_101 if qword [r10 + rsi * 8] je rdi [r10 , rsi , rdi , ][]
	jump Label_102 [][]
Label_101:
	qword [r10 + rsi * 8] = 48 [r10 , rsi , ][]
	jump Label_100 [r10 , rsi , ][]
Label_102:
	rax = 1 [][rax]
	jump Label_95 [][]
Label_100:
Label_96:
	rdi = rsi [r10 , rsi , ][rdi]
	rsi = rsi - 1 [r10 , rsi , ][rsi]
	jump Label_99 [r10 , rsi , ][]
Label_97:
	rax = 0 [][rax]
	jump Label_95 [][]
Label_95:
array_equal [Func]:
	r10 = rdi [rdi , rsi , ][r10]
	rsi = rsi [r10 , rsi , ][rsi]
		rdi = r10 [r10 , rsi , ][rdi]
		FuncCall array.size Param_size : 1 [rdi , r10 , rsi , ][rax]
		r11 = rax [rax , r10 , rsi , ][r11]
		rdi = rsi [r11 , r10 , rsi , ][rdi]
		FuncCall array.size Param_size : 1 [r11 , rdi , r10 , rsi , ][rax]
		rdi = rax [r11 , rax , r10 , rsi , ][rdi]
	jump Label_105 if r11 jne rdi [r11 , r10 , rsi , rdi , ][]
	jump Label_106 [r10 , rsi , ][]
Label_105:
	rax = 0 [][rax]
	jump Label_103 [][]
	jump Label_104 [r10 , rsi , ][]
Label_106:
Label_104:
	r11 = 0 [r10 , rsi , ][r11]
Label_110:
		rdi = r10 [r11 , r10 , rsi , ][rdi]
		FuncCall array.size Param_size : 1 [r11 , rdi , r10 , rsi , ][rax]
		rdi = rax [rax , r11 , r10 , rsi , ][rdi]
	jump Label_109 if r11 jl rdi [rdi , r11 , r10 , rsi , ][]
	jump Label_108 [][]
Label_109:
	jump Label_112 if qword [r10 + r11 * 8] jne qword [rsi + r11 * 8] [r11 , r10 , rsi , ][]
	jump Label_113 [r11 , r10 , rsi , ][]
Label_112:
	rax = 0 [][rax]
	jump Label_103 [][]
	jump Label_111 [r11 , r10 , rsi , ][]
Label_113:
Label_111:
Label_107:
	rdi = r11 [r11 , r10 , rsi , ][rdi]
	r11 = r11 + 1 [r11 , r10 , rsi , ][r11]
	jump Label_110 [r11 , r10 , rsi , ][]
Label_108:
	rax = 1 [][rax]
	jump Label_103 [][]
Label_103:
crackSHA1 [Func]:
	r10 = rdi [rdi , ][r10]
	rdi = 5 [r10 , ][rdi]
	rdi = rdi + 1 [r10 , rdi , ][rdi]
	rdi = rdi * 8 [r10 , rdi , ][rdi]
		rdi = rdi [r10 , rdi , ][rdi]
		FuncCall malloc Param_size : 1 [rdi , r10 , ][rax]
		rdi = rax [rax , r10 , ][rdi]
	qword [rdi] = 5 [rdi , r10 , ][]
	rdi = rdi + 8 [rdi , r10 , ][rdi]
	r11 = rdi [rdi , r10 , ][r11]
		rdi = r10 [r11 , r10 , ][rdi]
		FuncCall string.length Param_size : 1 [rdi , r11 , r10 , ][rax]
		rdi = rax [rax , r11 , r10 , ][rdi]
	jump Label_116 if rdi jne 40 [rdi , r11 , r10 , ][]
	jump Label_117 [r11 , r10 , ][]
Label_116:
		rdi = str__4 [][rdi]
		FuncCall println Param_size : 1 [rdi , ][rax]
		rdi = rax [rax , ][rdi]
	jump Label_114 [][]
	jump Label_115 [r11 , r10 , ][]
Label_117:
Label_115:
	r8 = 0 [r11 , r10 , ][r8]
Label_121:
	jump Label_120 if r8 jl 5 [r8 , r11 , r10 , ][]
	jump Label_119 [r11 , r10 , ][]
Label_120:
	qword [r11 + r8 * 8] = 0 [r8 , r11 , r10 , ][]
Label_118:
	rdi = r8 [r8 , r11 , r10 , ][rdi]
	r8 = r8 + 1 [r8 , r11 , r10 , ][r8]
	jump Label_121 [r8 , r11 , r10 , ][]
Label_119:
	r8 = 0 [r11 , r10 , ][r8]
Label_125:
	jump Label_124 if r8 jl 40 [r8 , r11 , r10 , ][]
	jump Label_123 [r11 , ][]
Label_124:
	r9 = r8 / 8 [r8 , r11 , r10 , ][r9]
	r12 = r8 / 8 [r9 , r8 , r11 , r10 , ][r12]
	r13 = r8 + 3 [r9 , r12 , r8 , r11 , r10 , ][r13]
		rdi = r10 [r13 , r9 , r12 , r8 , r11 , r10 , ][rdi]
		rsi = r8 [r13 , r9 , r12 , r8 , rdi , r11 , r10 , ][rsi]
		rdx = r13 [r13 , r9 , r12 , r8 , rdi , r11 , rsi , r10 , ][rdx]
		FuncCall string.substring Param_size : 3 [rdx , r9 , r12 , r8 , rdi , r11 , rsi , r10 , ][rax]
		rdi = rax [rax , r9 , r12 , r8 , r11 , r10 , ][rdi]
		rdi = rdi [r9 , r12 , r8 , r11 , rdi , r10 , ][rdi]
		FuncCall hex2int Param_size : 1 [r9 , r12 , r8 , rdi , r11 , r10 , ][rax]
		rdi = rax [rax , r9 , r12 , r8 , r11 , r10 , ][rdi]
	rsi = r8 / 4 [r9 , r12 , r8 , rdi , r11 , r10 , ][rsi]
	rsi = rsi % 2 [r9 , r12 , rsi , r8 , rdi , r11 , r10 , ][rsi]
	rsi = 1 - rsi [r9 , r12 , r8 , rdi , r11 , r10 , rsi , ][rsi]
	rsi = rsi * 16 [r9 , r12 , r8 , rdi , r11 , rsi , r10 , ][rsi]
	rdi = rdi << rsi [rsi , r9 , r12 , r8 , rdi , r11 , r10 , ][rdi]
	rdi = qword [r11 + r12 * 8] | rdi [rdi , r9 , r12 , r8 , r11 , r10 , ][rdi]
	qword [r11 + r9 * 8] = rdi [r9 , r8 , r11 , r10 , rdi , ][]
Label_122:
	rdi = r8 + 4 [r8 , r11 , r10 , ][rdi]
	r8 = rdi [r11 , r10 , rdi , ][r8]
	jump Label_125 [r8 , r11 , r10 , ][]
Label_123:
	r10 = 4 [r11 , ][r10]
	r9 = 1 [r11 , r10 , ][r9]
Label_129:
	jump Label_128 if r9 jle r10 [r9 , r11 , r10 , ][]
	jump Label_127 [][]
Label_128:
	r8 = 0 [r9 , r11 , r10 , ][r8]
Label_133:
	jump Label_132 if r8 jl r9 [r9 , r8 , r11 , r10 , ][]
	jump Label_131 [r9 , r11 , r10 , ][]
Label_132:
	rdi = qword [ inputBuffer__ ] [r9 , r8 , r11 , r10 , ][rdi]
	qword [rdi + r8 * 8] = 48 [r9 , r8 , rdi , r11 , r10 , ][]
Label_130:
	rdi = r8 [r9 , r8 , r11 , r10 , ][rdi]
	r8 = r8 + 1 [r9 , r8 , r11 , r10 , ][r8]
	jump Label_133 [r9 , r8 , r11 , r10 , ][]
Label_131:
Label_137:
	jump Label_136 if 1 je 1 [r9 , r11 , r10 , ][]
	jump Label_135 [r9 , r11 , r10 , ][]
Label_136:
		rdi = qword [ inputBuffer__ ] [r9 , r11 , r10 , ][rdi]
		rsi = r9 [r9 , rdi , r11 , r10 , ][rsi]
		FuncCall sha1 Param_size : 2 [r9 , rdi , r11 , rsi , r10 , ][rax]
		rdi = rax [r9 , rax , r11 , r10 , ][rdi]
	rdi = rdi [r9 , rdi , r11 , r10 , ][rdi]
		rdi = rdi [r9 , rdi , r11 , r10 , ][rdi]
		rsi = r11 [r9 , rdi , r11 , r10 , ][rsi]
		FuncCall array_equal Param_size : 2 [r9 , rdi , r11 , rsi , r10 , ][rax]
		rdi = rax [r9 , rax , r11 , r10 , ][rdi]
	jump Label_139 if rdi je 1 [rdi , r9 , r11 , r10 , ][]
	jump Label_140 [r9 , r11 , r10 , ][]
Label_139:
	r8 = 0 [r9 , ][r8]
Label_144:
	jump Label_143 if r8 jl r9 [r9 , r8 , ][]
	jump Label_142 [][]
Label_143:
	rdi = qword [ inputBuffer__ ] [r9 , r8 , ][rdi]
		rdi = qword [rdi + r8 * 8] [r9 , r8 , rdi , ][rdi]
		FuncCall int2chr Param_size : 1 [r9 , r8 , rdi , ][rax]
		rdi = rax [r9 , rax , r8 , ][rdi]
		rdi = rdi [r9 , rdi , r8 , ][rdi]
		FuncCall print Param_size : 1 [r9 , r8 , rdi , ][rax]
		rdi = rax [r9 , rax , r8 , ][rdi]
Label_141:
	rdi = r8 [r9 , r8 , ][rdi]
	r8 = r8 + 1 [r9 , r8 , ][r8]
	jump Label_144 [r9 , r8 , ][]
Label_142:
		rdi = str__5 [][rdi]
		FuncCall println Param_size : 1 [rdi , ][rax]
		rdi = rax [rax , ][rdi]
	jump Label_114 [][]
	jump Label_138 [r9 , r11 , r10 , ][]
Label_140:
Label_138:
		rdi = qword [ inputBuffer__ ] [r9 , r11 , r10 , ][rdi]
		rsi = r9 [r9 , rdi , r11 , r10 , ][rsi]
		FuncCall nextText Param_size : 2 [r9 , rdi , r11 , rsi , r10 , ][rax]
		rdi = rax [r9 , rax , r11 , r10 , ][rdi]
	rdi = rdi [r9 , r11 , r10 , rdi , ][rdi]
	! rdi [rdi , r9 , r11 , r10 , ][rdi]
	jump Label_146 if rdi je 1 [rdi , r9 , r11 , r10 , ][]
	jump Label_147 [r9 , r11 , r10 , ][]
Label_146:
	jump Label_135 [r9 , r11 , r10 , ][]
	jump Label_145 [r9 , r11 , r10 , ][]
Label_147:
Label_145:
Label_134:
	jump Label_137 [r9 , r11 , r10 , ][]
Label_135:
Label_126:
	rdi = r9 [r9 , r11 , r10 , ][rdi]
	r9 = r9 + 1 [r9 , r11 , r10 , ][r9]
	jump Label_129 [r9 , r11 , r10 , ][]
Label_127:
		rdi = str__6 [][rdi]
		FuncCall println Param_size : 1 [rdi , ][rax]
		rdi = rax [rax , ][rdi]
Label_114:
main [Func]:
	qword [ asciiTable__ ] = str__7 [][]
	qword [ MAXCHUNK__ ] = 100 [][]
	rdi = qword [ MAXCHUNK__ ] - 1 [][rdi]
	rdi = rdi * 64 [rdi , ][rdi]
	rdi = rdi - 16 [rdi , ][rdi]
	qword [ MAXLENGTH__ ] = rdi [rdi , ][]
	rsi = qword [ MAXCHUNK__ ] [][rsi]
	rsi = rsi + 1 [rsi , ][rsi]
	rsi = rsi * 8 [rsi , ][rsi]
		rdi = rsi [rsi , ][rdi]
		FuncCall malloc Param_size : 1 [rdi , ][rax]
		r10 = rax [rax , ][r10]
	qword [r10] = qword [ MAXCHUNK__ ] [r10 , ][]
	r10 = r10 + 8 [r10 , ][r10]
	rsi = qword [ MAXCHUNK__ ] [r10 , ][rsi]
Label_149:
	rsi = rsi - 1 [rsi , r10 , ][rsi]
	rdi = 80 [rsi , r10 , ][rdi]
	rdi = rdi + 1 [rdi , rsi , r10 , ][rdi]
	rdi = rdi * 8 [rdi , rsi , r10 , ][rdi]
		rdi = rdi [rdi , rsi , r10 , ][rdi]
		FuncCall malloc Param_size : 1 [rsi , r10 , rdi , ][rax]
		rdi = rax [rax , rsi , r10 , ][rdi]
	qword [rdi] = 80 [rsi , r10 , rdi , ][]
	rdi = rdi + 8 [rsi , r10 , rdi , ][rdi]
	qword [r10 + rsi * 8] = rdi [rsi , r10 , rdi , ][]
	jump Label_149 if rsi jne 0 [rsi , r10 , ][]
	qword [ chunks__ ] = r10 [r10 , ][]
	rdi = qword [ MAXLENGTH__ ] [][rdi]
	rdi = rdi + 1 [rdi , ][rdi]
	rdi = rdi * 8 [rdi , ][rdi]
		rdi = rdi [rdi , ][rdi]
		FuncCall malloc Param_size : 1 [rdi , ][rax]
		rdi = rax [rax , ][rdi]
	qword [rdi] = qword [ MAXLENGTH__ ] [rdi , ][]
	rdi = rdi + 8 [rdi , ][rdi]
	qword [ inputBuffer__ ] = rdi [rdi , ][]
	rdi = 5 [][rdi]
	rdi = rdi + 1 [rdi , ][rdi]
	rdi = rdi * 8 [rdi , ][rdi]
		rdi = rdi [rdi , ][rdi]
		FuncCall malloc Param_size : 1 [rdi , ][rax]
		rdi = rax [rax , ][rdi]
	qword [rdi] = 5 [rdi , ][]
	rdi = rdi + 8 [rdi , ][rdi]
	qword [ outputBuffer__ ] = rdi [rdi , ][]
Label_153:
	jump Label_152 if 1 je 1 [][]
	jump Label_151 [][]
Label_152:
		FuncCall getInt Param_size : 0 [][rax]
		rdi = rax [rax , ][rdi]
	rdi = rdi [rdi , ][rdi]
	jump Label_155 if rdi je 0 [rdi , ][]
	jump Label_156 [rdi , ][]
Label_155:
	jump Label_151 [][]
	jump Label_154 [rdi , ][]
Label_156:
Label_154:
	jump Label_158 if rdi je 1 [rdi , ][]
	jump Label_159 [rdi , ][]
Label_158:
		FuncCall getString Param_size : 0 [][rax]
		rdi = rax [rax , ][rdi]
	rdi = rdi [rdi , ][rdi]
		rdi = rdi [rdi , ][rdi]
		FuncCall computeSHA1 Param_size : 1 [rdi , ][rax]
		rdi = rax [rax , ][rdi]
	jump Label_157 [][]
Label_159:
	jump Label_160 if rdi je 2 [rdi , ][]
	jump Label_161 [][]
Label_160:
		FuncCall getString Param_size : 0 [][rax]
		rdi = rax [rax , ][rdi]
	rdi = rdi [rdi , ][rdi]
		rdi = rdi [rdi , ][rdi]
		FuncCall crackSHA1 Param_size : 1 [rdi , ][rax]
		rdi = rax [rax , ][rdi]
	jump Label_157 [][]
Label_161:
Label_157:
Label_150:
	jump Label_153 [][]
Label_151:
	rax = 0 [][rax]
	jump Label_148 [][]
Label_148:
