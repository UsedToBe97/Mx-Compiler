
string[ 0 ] Ans is 

hilo [Func]:
	rdi = rdi [rdi , rsi , ][rdi]
	rsi = rsi [rdi , rsi , ][rsi]
	rdi = rdi << 16 [rdi , rsi , ][rdi]
	rdi = rsi | rdi [rdi , rsi , ][rdi]
	rax = rdi [rdi , ][rax]
	jump Label_0 [][]
Label_0:
shift_l [Func]:
	rdi = rdi [rdi , rsi , ][rdi]
	rsi = rsi [rdi , rsi , ][rsi]
	rdi = rdi << rsi [rsi , rdi , ][rdi]
	rdi = rdi & 2147483647 [rdi , ][rdi]
	rax = rdi [rdi , ][rax]
	jump Label_1 [][]
Label_1:
shift_r [Func]:
	rdi = rdi [rdi , rsi , ][rdi]
	rsi = rsi [rdi , rsi , ][rsi]
	r10 = 2147418112 >> rsi [rsi , rdi , ][r10]
	r10 = r10 << 2 [r10 , rsi , rdi , ][r10]
	r10 = r10 + 1 [r10 , rsi , rdi , ][r10]
	rdi = rdi >> rsi [r10 , rsi , rdi , ][rdi]
	rdi = r10 & rdi [r10 , rdi , ][rdi]
	rdi = rdi & 2147483647 [rdi , ][rdi]
	rax = rdi [rdi , ][rax]
	jump Label_2 [][]
Label_2:
xorshift [Func]:
	rdi = rdi [rdi , rsi , ][rdi]
	rsi = rsi [rdi , rsi , ][rsi]
	rdi = rdi + 1 [rdi , rsi , ][rdi]
	rdi = rdi [rsi , rdi , ][rdi]
	r10 = 0 [rsi , rdi , ][r10]
Label_7:
	r11 = rsi * 10 [rsi , rdi , r10 , ][r11]
	jump Label_6 if r10 jl r11 [rsi , rdi , r10 , r11 , ][]
	jump Label_5 [rdi , ][]
Label_6:
	r11 = rdi << 13 [rsi , rdi , r10 , ][r11]
	r11 = r11 & 2147483647 [rsi , rdi , r10 , r11 , ][r11]
	rdi = rdi ^ r11 [rsi , rdi , r10 , r11 , ][rdi]
	rdi = rdi [rsi , rdi , r10 , ][rdi]
	r11 = rdi >> 17 [rsi , rdi , r10 , ][r11]
	r11 = 65533 & r11 [rsi , rdi , r10 , r11 , ][r11]
	r11 = r11 & 2147483647 [rsi , r11 , rdi , r10 , ][r11]
	rdi = rdi ^ r11 [rsi , rdi , r10 , r11 , ][rdi]
	rdi = rdi [rsi , rdi , r10 , ][rdi]
	r11 = rdi << 5 [rsi , rdi , r10 , ][r11]
	r11 = r11 & 2147483647 [rsi , rdi , r10 , r11 , ][r11]
	rdi = rdi ^ r11 [rsi , rdi , r10 , r11 , ][rdi]
	rdi = rdi [rsi , rdi , r10 , ][rdi]
Label_4:
	r11 = r10 [rsi , rdi , r10 , ][r11]
	r10 = r10 + 1 [rsi , rdi , r10 , ][r10]
	jump Label_7 [rsi , rdi , r10 , ][]
Label_5:
	rdi = rdi ^ 123456789 [rdi , ][rdi]
	rax = rdi [rdi , ][rax]
	jump Label_3 [][]
Label_3:
main [Func]:
		FuncCall getInt Param_size : 0 [][rax]
		rdi = rax [rax , ][rdi]
	r10 = rdi [rdi , ][r10]
	rsi = r10 [r10 , ][rsi]
	rsi = rsi + 1 [rsi , r10 , ][rsi]
	rsi = rsi * 8 [rsi , r10 , ][rsi]
		rdi = rsi [rsi , r10 , ][rdi]
		FuncCall malloc Param_size : 1 [rdi , r10 , ][rax]
		r11 = rax [rax , r10 , ][r11]
	qword [r11] = r10 [r11 , r10 , ][]
	r11 = r11 + 8 [r11 , r10 , ][r11]
	rsi = r10 [r11 , r10 , ][rsi]
Label_9:
	rsi = rsi - 1 [r11 , rsi , r10 , ][rsi]
	rdi = r10 [r11 , r10 , rsi , ][rdi]
	rdi = rdi + 1 [r11 , rdi , r10 , rsi , ][rdi]
	rdi = rdi * 8 [r11 , rdi , r10 , rsi , ][rdi]
		rdi = rdi [r11 , rdi , r10 , rsi , ][rdi]
		FuncCall malloc Param_size : 1 [rdi , r11 , r10 , rsi , ][rax]
		rdi = rax [rax , r11 , r10 , rsi , ][rdi]
	qword [rdi] = r10 [r11 , r10 , rsi , rdi , ][]
	rdi = rdi + 8 [r11 , rsi , r10 , rdi , ][rdi]
	qword [r11 + rsi * 8] = rdi [r11 , rsi , r10 , rdi , ][]
	jump Label_9 if rsi jne 0 [r11 , rsi , r10 , ][]
	r12 = r11 [r11 , r10 , ][r12]
	r11 = 0 [r12 , r10 , ][r11]
Label_13:
	jump Label_12 if r11 jl r10 [r12 , r11 , r10 , ][]
	jump Label_11 [r12 , r10 , ][]
Label_12:
	r8 = 0 [r12 , r11 , r10 , ][r8]
Label_17:
	jump Label_16 if r8 jl r10 [r12 , r11 , r8 , r10 , ][]
	jump Label_15 [r12 , r11 , r10 , ][]
Label_16:
	r9 = 0 [r12 , r11 , r8 , r10 , ][r9]
Label_21:
	jump Label_20 if r9 jl r10 [r12 , r11 , r8 , r10 , r9 , ][]
	jump Label_19 [r12 , r11 , r8 , r10 , ][]
Label_20:
	jump Label_25 if r11 jg 0 [r12 , r11 , r8 , r10 , r9 , ][]
	rdi = 0 [r12 , r11 , r8 , r10 , r9 , ][rdi]
	jump Label_26 [rdi , r12 , r11 , r8 , r10 , r9 , ][]
Label_25:
	rdi = r8 > 0 [r12 , r11 , r8 , r10 , r9 , ][rdi]
	rdi = rdi [rdi , r12 , r11 , r8 , r10 , r9 , ][rdi]
Label_26:
	jump Label_27 if rdi je 1 [rdi , r12 , r11 , r8 , r10 , r9 , ][]
	rdi = 0 [r12 , r11 , r8 , r10 , r9 , ][rdi]
	jump Label_28 [r12 , r11 , r8 , r10 , r9 , rdi , ][]
Label_27:
	rdi = r9 > 0 [r12 , r11 , r8 , r10 , r9 , ][rdi]
	rdi = rdi [r12 , r11 , rdi , r8 , r10 , r9 , ][rdi]
Label_28:
	jump Label_23 if rdi je 1 [r12 , r11 , r8 , r10 , r9 , rdi , ][]
	jump Label_24 [r12 , r11 , r8 , r10 , r9 , ][]
Label_23:
	rdi = r11 % r8 [r12 , r11 , r8 , r10 , r9 , ][rdi]
	rsi = r8 % r9 [r12 , r11 , r8 , rdi , r10 , r9 , ][rsi]
	jump Label_32 if rdi jne rsi [r12 , r11 , rsi , r8 , rdi , r10 , r9 , ][]
	rdi = 0 [r12 , r11 , r8 , r10 , r9 , ][rdi]
	jump Label_33 [r12 , r11 , rdi , r8 , r10 , r9 , ][]
Label_32:
	rdi = r8 % r9 [r12 , r11 , r8 , r10 , r9 , ][rdi]
	rsi = r9 % r11 [r12 , r11 , r8 , r10 , r9 , rdi , ][rsi]
	rdi = rdi != rsi [r12 , r11 , r8 , r10 , rdi , r9 , rsi , ][rdi]
	rdi = rdi [rdi , r12 , r11 , r8 , r10 , r9 , ][rdi]
Label_33:
	jump Label_34 if rdi je 1 [r12 , r11 , rdi , r8 , r10 , r9 , ][]
	rdi = 0 [r12 , r11 , r8 , r10 , r9 , ][rdi]
	jump Label_35 [r12 , r11 , r8 , r10 , r9 , rdi , ][]
Label_34:
	rdi = r11 % r8 [r12 , r11 , r8 , r10 , r9 , ][rdi]
	rsi = r9 % r11 [rdi , r12 , r11 , r8 , r10 , r9 , ][rsi]
	rdi = rdi != rsi [rdi , r12 , r11 , r8 , rsi , r10 , r9 , ][rdi]
	rdi = rdi [r12 , r11 , r8 , rdi , r10 , r9 , ][rdi]
Label_35:
	jump Label_30 if rdi je 1 [r12 , r11 , r8 , r10 , r9 , rdi , ][]
	jump Label_31 [r12 , r11 , r8 , r10 , r9 , ][]
Label_30:
	r13 = qword [r12 + r11 * 8] [r12 , r11 , r8 , r10 , r9 , ][r13]
	rdi = r11 & r8 [r12 , r11 , r8 , r10 , r9 , r13 , ][rdi]
	rdi = rdi & r9 [r12 , r11 , r8 , rdi , r10 , r9 , r13 , ][rdi]
	rsi = r11 + r8 [rdi , r12 , r11 , r8 , r10 , r9 , r13 , ][rsi]
	rsi = rsi + r9 [rdi , rsi , r12 , r11 , r8 , r10 , r9 , r13 , ][rsi]
		rdi = rdi [rdi , r12 , r11 , r8 , rsi , r10 , r13 , r9 , ][rdi]
		rsi = rsi [rdi , r12 , r11 , r8 , rsi , r10 , r13 , r9 , ][rsi]
		FuncCall xorshift Param_size : 2 [rdi , r12 , r11 , r8 , rsi , r10 , r13 , r9 , ][rax]
		rdi = rax [rax , r12 , r11 , r8 , r10 , r13 , r9 , ][rdi]
	qword [r13 + r8 * 8] = rdi [r12 , r11 , r8 , rdi , r10 , r13 , r9 , ][]
	jump Label_29 [r12 , r11 , r8 , r10 , r9 , ][]
Label_31:
Label_29:
	jump Label_22 [r12 , r11 , r8 , r10 , r9 , ][]
Label_24:
Label_22:
Label_18:
	r9 = r9 + 1 [r12 , r11 , r8 , r10 , r9 , ][r9]
	jump Label_21 [r12 , r11 , r8 , r10 , r9 , ][]
Label_19:
Label_14:
	r8 = r8 + 1 [r12 , r11 , r8 , r10 , ][r8]
	jump Label_17 [r12 , r11 , r8 , r10 , ][]
Label_15:
Label_10:
	r11 = r11 + 1 [r12 , r11 , r10 , ][r11]
	jump Label_13 [r12 , r11 , r10 , ][]
Label_11:
	rdi = 0 [r12 , r10 , ][rdi]
	r11 = 0 [r12 , rdi , r10 , ][r11]
Label_39:
	jump Label_38 if r11 jl r10 [r12 , r11 , rdi , r10 , ][]
	jump Label_37 [rdi , ][]
Label_38:
	r8 = 0 [r12 , r11 , rdi , r10 , ][r8]
Label_43:
	jump Label_42 if r8 jl r10 [r12 , r11 , r8 , rdi , r10 , ][]
	jump Label_41 [r12 , r11 , rdi , r10 , ][]
Label_42:
	r9 = 0 [r12 , r11 , r8 , rdi , r10 , ][r9]
Label_47:
	jump Label_46 if r9 jl r10 [r12 , r11 , r8 , rdi , r10 , r9 , ][]
	jump Label_45 [r12 , r11 , r8 , rdi , r10 , ][]
Label_46:
	jump Label_51 if r11 jge r8 [r12 , r11 , r8 , rdi , r10 , r9 , ][]
	rsi = 0 [r12 , r11 , r8 , rdi , r10 , r9 , ][rsi]
	jump Label_52 [r12 , r11 , r8 , rsi , rdi , r10 , r9 , ][]
Label_51:
	rsi = r8 >= r9 [r12 , r11 , r8 , rdi , r10 , r9 , ][rsi]
	rsi = rsi [r12 , r11 , r8 , rdi , rsi , r10 , r9 , ][rsi]
Label_52:
	jump Label_49 if rsi je 1 [r12 , r11 , r8 , rsi , rdi , r10 , r9 , ][]
	jump Label_50 [r12 , r11 , r8 , rdi , r10 , r9 , ][]
Label_49:
	rsi = qword [r12 + r11 * 8] [r12 , r11 , r8 , rdi , r10 , r9 , ][rsi]
	rdi = rdi + qword [rsi + r8 * 8] [r12 , r11 , rsi , r8 , rdi , r10 , r9 , ][rdi]
	rdi = rdi & 1073741823 [r12 , r11 , r8 , r10 , rdi , r9 , ][rdi]
	rdi = rdi [r12 , r11 , rdi , r8 , r10 , r9 , ][rdi]
	jump Label_48 [r12 , r11 , r8 , rdi , r10 , r9 , ][]
Label_50:
Label_48:
Label_44:
	r9 = r9 + 1 [r12 , r11 , r8 , rdi , r10 , r9 , ][r9]
	jump Label_47 [r12 , r11 , r8 , rdi , r10 , r9 , ][]
Label_45:
Label_40:
	r8 = r8 + 1 [r12 , r11 , r8 , rdi , r10 , ][r8]
	jump Label_43 [r12 , r11 , r8 , rdi , r10 , ][]
Label_41:
Label_36:
	r11 = r11 + 1 [r12 , r11 , rdi , r10 , ][r11]
	jump Label_39 [r12 , r11 , rdi , r10 , ][]
Label_37:
		rdi = rdi [rdi , ][rdi]
		FuncCall toString Param_size : 1 [rdi , ][rax]
		rsi = rax [rax , ][rsi]
		rdi = str__0 [rsi , ][rdi]
		rsi = rsi [rdi , rsi , ][rsi]
		FuncCall string.add Param_size : 2 [rdi , rsi , ][rax]
		rdi = rax [rax , ][rdi]
		rdi = rdi [rdi , ][rdi]
		FuncCall println Param_size : 1 [rdi , ][rax]
		rdi = rax [rax , ][rdi]
	rax = 0 [][rax]
	jump Label_8 [][]
Label_8:
