

func [Func]:
	reg16 = rdi [][]
	reg17 = rsi [][]
	reg18 = rdx [][]
	reg21 = reg16 + reg17 [][]
	reg20 = reg21 + reg18 [][]
	reg23 = 1 << 30 [][]
	reg22 = reg23 - 1 [][]
	reg19 = reg20 & reg22 [][]
	rax = reg19 [][]
	jump Label_0 [][]
Label_0:
main [Func]:
		FuncCall getInt Param_size : 0 [][]
		reg16 = rax [][]
	reg17 = reg16 [][]
	reg18 = reg17 [][]
	reg18 = reg18 + 1 [][]
	reg18 = reg18 * 8 [][]
		rdi = reg18 [][]
		FuncCall malloc Param_size : 1 [][]
		reg19 = rax [][]
	qword [reg19] = reg17 [][]
	reg19 = reg19 + 8 [][]
	reg18 = reg17 [][]
Label_2:
	reg18 = reg18 - 1 [][]
	reg20 = reg17 [][]
	reg20 = reg20 + 1 [][]
	reg20 = reg20 * 8 [][]
		rdi = reg20 [][]
		FuncCall malloc Param_size : 1 [][]
		reg21 = rax [][]
	qword [reg21] = reg17 [][]
	reg21 = reg21 + 8 [][]
	qword [reg19 + reg18 * 8] = reg21 [][]
	jump Label_2 if reg18 jne 0 [][]
	reg22 = reg19 [][]
	reg23 = reg17 [][]
	reg23 = reg23 + 1 [][]
	reg23 = reg23 * 8 [][]
		rdi = reg23 [][]
		FuncCall malloc Param_size : 1 [][]
		reg24 = rax [][]
	qword [reg24] = reg17 [][]
	reg24 = reg24 + 8 [][]
	reg23 = reg17 [][]
Label_3:
	reg23 = reg23 - 1 [][]
	reg25 = reg17 [][]
	reg25 = reg25 + 1 [][]
	reg25 = reg25 * 8 [][]
		rdi = reg25 [][]
		FuncCall malloc Param_size : 1 [][]
		reg26 = rax [][]
	qword [reg26] = reg17 [][]
	reg26 = reg26 + 8 [][]
	qword [reg24 + reg23 * 8] = reg26 [][]
	jump Label_3 if reg23 jne 0 [][]
	reg27 = reg24 [][]
	reg28 = reg17 [][]
	reg28 = reg28 + 1 [][]
	reg28 = reg28 * 8 [][]
		rdi = reg28 [][]
		FuncCall malloc Param_size : 1 [][]
		reg29 = rax [][]
	qword [reg29] = reg17 [][]
	reg29 = reg29 + 8 [][]
	reg28 = reg17 [][]
Label_4:
	reg28 = reg28 - 1 [][]
	reg30 = reg17 [][]
	reg30 = reg30 + 1 [][]
	reg30 = reg30 * 8 [][]
		rdi = reg30 [][]
		FuncCall malloc Param_size : 1 [][]
		reg31 = rax [][]
	qword [reg31] = reg17 [][]
	reg31 = reg31 + 8 [][]
	qword [reg29 + reg28 * 8] = reg31 [][]
	jump Label_4 if reg28 jne 0 [][]
	reg32 = reg29 [][]
	reg33 = 0 [][]
Label_8:
	jump Label_7 if reg33 jl reg17 [][]
	jump Label_6 [][]
Label_7:
	reg34 = 0 [][]
Label_12:
	jump Label_11 if reg34 jl reg17 [][]
	jump Label_10 [][]
Label_11:
	reg38 = qword [reg22 + reg33 * 8] [][]
	reg39 = reg33 + reg34 [][]
	qword [reg38 + reg34 * 8] = reg39 [][]
Label_9:
	reg34 = reg34 + 1 [][]
	jump Label_12 [][]
Label_10:
Label_5:
	reg33 = reg33 + 1 [][]
	jump Label_8 [][]
Label_6:
	reg33 = 0 [][]
Label_16:
	jump Label_15 if reg33 jl reg17 [][]
	jump Label_14 [][]
Label_15:
	reg34 = 0 [][]
Label_20:
	jump Label_19 if reg34 jl reg17 [][]
	jump Label_18 [][]
Label_19:
	reg35 = 0 [][]
Label_24:
	jump Label_23 if reg35 jl reg17 [][]
	jump Label_22 [][]
Label_23:
	jump Label_26 if reg34 jge reg33 [][]
	jump Label_27 [][]
Label_26:
	reg44 = qword [reg27 + reg33 * 8] [][]
	reg45 = qword [reg27 + reg33 * 8] [][]
	reg46 = qword [reg22 + reg33 * 8] [][]
	reg47 = qword [reg22 + reg35 * 8] [][]
	reg50 = qword [reg45 + reg34 * 8] + qword [reg46 + reg35 * 8] [][]
	reg49 = reg50 + qword [reg47 + reg34 * 8] [][]
	reg52 = 1 << 30 [][]
	reg51 = reg52 - 1 [][]
	reg48 = reg49 & reg51 [][]
	qword [reg44 + reg34 * 8] = reg48 [][]
	reg53 = qword [reg32 + reg33 * 8] [][]
	reg54 = qword [reg27 + reg33 * 8] [][]
	reg55 = qword [reg22 + reg33 * 8] [][]
	reg56 = qword [reg22 + reg35 * 8] [][]
	reg59 = qword [reg54 + reg34 * 8] + qword [reg55 + reg35 * 8] [][]
	reg58 = reg59 + qword [reg56 + reg34 * 8] [][]
	reg61 = 1 << 30 [][]
	reg60 = reg61 - 1 [][]
	reg57 = reg58 & reg60 [][]
	qword [reg53 + reg34 * 8] = reg57 [][]
	reg62 = qword [reg32 + reg33 * 8] [][]
	reg63 = qword [reg27 + reg33 * 8] [][]
	reg64 = qword [reg22 + reg33 * 8] [][]
	reg65 = qword [reg22 + reg35 * 8] [][]
	reg68 = qword [reg63 + reg34 * 8] + qword [reg64 + reg35 * 8] [][]
	reg67 = reg68 + qword [reg65 + reg34 * 8] [][]
	reg70 = 1 << 30 [][]
	reg69 = reg70 - 1 [][]
	reg66 = reg67 & reg69 [][]
	qword [reg62 + reg34 * 8] = reg66 [][]
	reg71 = qword [reg32 + reg33 * 8] [][]
	reg72 = qword [reg27 + reg33 * 8] [][]
	reg73 = qword [reg22 + reg33 * 8] [][]
	reg74 = qword [reg22 + reg35 * 8] [][]
	reg77 = qword [reg72 + reg34 * 8] + qword [reg73 + reg35 * 8] [][]
	reg76 = reg77 + qword [reg74 + reg34 * 8] [][]
	reg79 = 1 << 30 [][]
	reg78 = reg79 - 1 [][]
	reg75 = reg76 & reg78 [][]
	qword [reg71 + reg34 * 8] = reg75 [][]
	jump Label_25 [][]
Label_27:
Label_25:
Label_21:
	reg35 = reg35 + 1 [][]
	jump Label_24 [][]
Label_22:
Label_17:
	reg34 = reg34 + 1 [][]
	jump Label_20 [][]
Label_18:
Label_13:
	reg33 = reg33 + 1 [][]
	jump Label_16 [][]
Label_14:
	reg80 = 0 [][]
	reg33 = 0 [][]
Label_31:
	jump Label_30 if reg33 jl reg17 [][]
	jump Label_29 [][]
Label_30:
	reg34 = 0 [][]
Label_35:
	jump Label_34 if reg34 jl reg17 [][]
	jump Label_33 [][]
Label_34:
	reg85 = qword [reg27 + reg33 * 8] [][]
	reg84 = reg80 + qword [reg85 + reg34 * 8] [][]
	reg87 = 1 << 30 [][]
	reg86 = reg87 - 1 [][]
	reg83 = reg84 & reg86 [][]
	reg80 = reg83 [][]
Label_32:
	reg34 = reg34 + 1 [][]
	jump Label_35 [][]
Label_33:
Label_28:
	reg33 = reg33 + 1 [][]
	jump Label_31 [][]
Label_29:
		rdi = reg80 [][]
		FuncCall toString Param_size : 1 [][]
		reg88 = rax [][]
		rdi = reg88 [][]
		FuncCall print Param_size : 1 [][]
		reg89 = rax [][]
	rax = 0 [][]
	jump Label_1 [][]
Label_1:
